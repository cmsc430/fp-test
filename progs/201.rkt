#lang racket
(cond
 ((if #t
    (cond
     ((if #\X #\U0003DA42 #t) (let ((x2 #f)) #\U0004763A))
     (2 (if #t #t 2))
     (#\U00034561 #\U00068934)
     ((if #t #f #\냜) 1)
     (#t #t)
     (7 #t)
     ((- 2) (let ((q1 (if #t #f (char? #t)))) -4))
     (#t (sub1 #t))
     ((sub1 #\伦) (if (if #f #t (boolean? #t)) -1 #f))
     ((cond
       (-2 -4)
       (#t #t)
       (#\㢺 #t)
       (-2 #\U000716D2)
       (#\U00076765 #\U000BD515)
       (else #f))
      #\U0007937F)
     (#t #t)
     ((if -9 -1 #\U000AF012) #t)
     ((let ((p0 #\鈞)) #t) (if (abs (boolean? #f)) #f #\U000539B0))
     ((if #\U000B0ED1
        #\U000839C2
        (if (abs
             (cond
              (#\U000EDF26 5)
              (#f #t)
              ((if #t 1 #f) (cond (else #f)))
              (5 (if -2 #\⾘ #\U00108BB5))
              ((integer->char 1) #t)
              ((cond
                (#\飖 #t)
                (#f 2)
                (#f #\ι)
                (#t #f)
                (#\斧 #\ཐ)
                (#f #\㞞)
                (#\쁖 -4)
                (#\U0002C0FB #t)
                (#t #t)
                (else #t))
               #t)
              ((cond (#f #t) (#t #t) (else #\檜)) #\U00037D6B)
              (#\矽 (cond (else #f)))
              ((if #t #t #t) 0)
              (#f #f)
              (6 (boolean? 64))
              (else
               (cond
                (#\飗 #f)
                (#t 1)
                (#t -5)
                (#f 3)
                (3 #f)
                (#t #\𦳫)
                (#f -1)
                (-7 #f)
                (#f #f)
                (else #f)))))
          2
          #\U000FD596))
      (integer? (cond (#f #t) (#\䜧 #f) (else #\U000DEB50))))
     ((let ((i1 #f)) i1) (if #\淪 #f #f))
     (else (integer? #t)))
    (let ((e2 (if -3 2 #\U000B91C1))) 2))
  #\ĝ)
 ((if (cond
       ((cond
         ((cond
           (#\U000D35FA #f)
           (#f -1)
           (#t #\U000D98CB)
           (#f #f)
           (#\ꢻ #f)
           (#\䂵 -1)
           (#t #\U0004DAFC)
           (else #f))
          (sub1 -2))
         (else #\閻))
        1)
       (#\U000A29AB #f)
       (else #f))
    (- (cond (else #t)))
    #\庼)
  (integer->char (let ((l1 #f)) #t)))
 (#t
  (cond
   ((cond
     (#\U000E76D2
      (zero?
       (cond
        (#\黛 (if 4 #f (add1 -14)))
        (#\㘜 2)
        (#f -2)
        ((cond (else #f)) #f)
        (#f #f)
        ((cond
          (#\U00033191 #f)
          ((if #f #\U000B237D #t) #\U00102B97)
          (else (integer? #t)))
         (- (cond (#\⡚ #\幙) (#\⟘ #f) (#t #\⇳) (#\䪈 -1) (else #t))))
        (#f #t)
        ((char->integer (if #\𩴑 #t #\U00044933)) #\U000454DA)
        (-5
         (if (char->integer #t)
           #t
           (cond (#t #f) (-4 #\U000B1A4A) (#f #f) (#\⋬ #f) (#t #f) (else -3))))
        (#t #t)
        (else #t))))
     ((if -1 #t 2) #t)
     (else #\뺑))
    16)
   ((if -1 (integer? #f) -1) (let ((h0 #f)) (let ((a2 h0)) a2)))
   (#f (if #\U000F9D14 #f #t))
   (-2 #t)
   (9 (abs (if #t #f -6)))
   (9 (if (if 3 #\U000C85EE #f) #t 1))
   (else
    (-
     (cond
      (#f #t)
      (#f 1)
      (-5 #f)
      (#f #f)
      (0 #t)
      (#\U000870B4 -32)
      ((cond
        (#\U000F4A87 (integer? (sub1 -2)))
        ((cond (else #\삞)) #\U0008F929)
        ((if (cond
              (#f #t)
              ((cond (else #t)) (if #t #f #f))
              ((cond (#f #\ే) (else #t)) (integer->char #f))
              ((if 4 #t #t) #t)
              ((abs #\ᖍ) (if -4 #f #f))
              (else #f))
           (char->integer #t)
           (if #f
             (cond (#\䪅 #\U00081526) (#t #t) (2 #f) (129 #f) (else #t))
             (if #\U000CE982 #t #t)))
         #t)
        (else
         (cond
          ((sub1 (if #\U0002DCB6 -6 #f)) #\뿌)
          (else
           (if (cond
                (#\U00043177 #\U0005C6F8)
                (#\U0004BA9D #t)
                (else #\U00066E32))
             (cond (#f #\꺈) (#\U0003605F #\U00105DF8) (#t #t) (else #f))
             (cond
              (#t #f)
              (#f 3)
              (#t #t)
              (#\섏 #\嶀)
              (#t 2)
              (#\U000EEC50 5)
              (#t #f)
              (#f -2)
              (#t #t)
              (#t #\꾵)
              (#f #\輰)
              (#t #f)
              (#\U000CF4CA -1)
              (#f #\U00076736)
              (#t 0)
              (#t #f)
              (#f #\U00014786)
              (else 4)))))))
       #f)
      (#f #\㱂)
      (else 0))))))
 ((let ((i2 #f)) #t)
  (integer->char
   (sub1
    (sub1
     (cond
      (-1 #\䁂)
      ((if (add1 3) #\U000684FF #t) (cond (#f (zero? #t)) (#t #t) (else #f)))
      (else #t))))))
 ((let ((y0 #t)) #f)
  (char->integer
   (cond
    (#\U000CED86 #t)
    (#t (cond (#t #t) (#f #f) (#f -4) (-8 -8) (else 3)))
    (else (- #t)))))
 ((if (cond
       (#\U00013CE2 (cond (#f 5) (else 2)))
       ((if 2 -6 #f) (if -1 #\ꡨ #t))
       ((char->integer #f) (cond (#t -3) (else #f)))
       ((integer->char
         (cond
          ((sub1 #t) (if #f (abs #t) (add1 (if 1 #\U00040CD0 #f))))
          ((if #\U000C46F0 -9 #\U000AA81C)
           (cond
            (-2 #\皫)
            (-2 #t)
            (#t #\袳)
            ((if (cond
                  (-2 #\ң)
                  (#t #\U000ED73E)
                  (-33 #\U000CE581)
                  (2 #t)
                  (#f #f)
                  (#f #\욮)
                  (#f #\㚳)
                  (#f 1)
                  (#\풻 -3)
                  (-2 #\U0004C0A2)
                  (#\ꉙ #t)
                  (#t -8)
                  (else #f))
               2
               #f)
             (cond
              (#\陚 (cond (else #t)))
              (#t (zero? #\U000FD796))
              (#f (boolean? #t))
              (#t #t)
              (else -1)))
            (#f 8)
            (#\ṽ -5)
            ((sub1 (if #f 2 #f)) #f)
            (#f #\蓾)
            (else -3)))
          (#\U000B9193 #f)
          ((zero? 1)
           (cond
            (#t #f)
            (#t #\嗨)
            ((if -1 (if #t #f #f) (zero? -1)) #t)
            (#t
             (cond
              (#\U0002D645 (cond (#f #\噖) (#f #\U000C1F8D) (else #t)))
              ((if #t #f -8) #t)
              ((if #t #t #\竀) (char? #f))
              (else -2)))
            (#t (char? 2))
            ((cond
              (#\ⷩ (abs #t))
              (#\췚 (cond (#t -5) (#t 2) (else #f)))
              (#f #\䜆)
              ((if #f #\賋 #t) #f)
              (#t #f)
              (3 8)
              (#f (zero? -2))
              ((if #\懤 7 #t) (if #t #\u139D #t))
              (#f #t)
              (#\U000AF71C
               (cond (5 #\U00016E7D) (-5 #\傓) (2 #\枉) (-65 -3) (else #f)))
              ((if -11 4 #\퐺) #\U0004B7C8)
              (#t #\Ҹ)
              (#f #f)
              (else -18))
             #\繄)
            (else -2)))
          ((- (add1 #t)) (if (- #\䝗) 2 (if (if #t #f #t) (if -1 2 #f) -17)))
          ((char?
            (cond
             ((cond (#f 1) (-3 #f) (#f #t) (#t #\U00098EC0) (#\努 #f) (else #f))
              #t)
             (#\U0009B51E #\둶)
             ((if #t 2 #t)
              (cond
               (#f #f)
               (#\U00041C28 #f)
               (#\策 #t)
               (#\U00044D21 3)
               (#\U0008FBA9 #t)
               (#\錂 #f)
               (else #\컓)))
             (#t (if #f 2 #t))
             ((cond (#\U0003CF49 #\𨯽) (#\刌 2) (else #\U0003BDBE)) 5)
             (-1 #\괃)
             (#\U0006BC3A #f)
             (else (cond (else #t)))))
           (cond (else (if #f #f -2))))
          ((cond (else #t)) -2)
          (#f #f)
          (#t
           (cond
            (3 (if (if #\U00056C84 #\U00046F89 4) (if 1 #\呩 #t) (sub1 #f)))
            ((integer->char -4) (cond (else (zero? #t))))
            ((cond (else (- 32))) 1)
            ((cond
              ((integer->char #\U000F2F33) #\㳓)
              ((cond
                (#t #t)
                (#f -4)
                (#t 3)
                (#f -6)
                (#\欠 #t)
                (#\剥 #f)
                (else #f))
               (cond (#f #\鴵) (else #\U000CD588)))
              (#f -1)
              ((char? #t) #f)
              ((if #f 8 #\㒵) (zero? #\U000319D1))
              ((cond (4 #t) (#f -1) (#t #\졎) (else #\U000BFF77)) 1)
              (#\跍 -5)
              (else (cond (#\䏻 -2) (#t -16) (else #f))))
             #f)
            ((if -2 (boolean? #f) #t) #\ꠀ)
            (-4 1)
            ((integer->char
              (cond
               (#\U00057037 #t)
               (#t #f)
               (#t #f)
               (#t #f)
               (#t #f)
               (else #\揟)))
             (integer? (char->integer #t)))
            ((if (integer? #\蛿) (cond (else #f)) #\툘) #\U001035F5)
            ((cond (3 #f) (else 3)) -1)
            ((char->integer #f) -7)
            ((if (cond
                  (#\U000E39FD #t)
                  (#t 0)
                  (#t #f)
                  (#f #f)
                  (#\U000F92CE -1)
                  (#\求 #\蓖)
                  (else #\U00105838))
               #f
               #\U00068CAE)
             #f)
            (#\𦫟 (cond (else #t)))
            ((if (if #f #t 2) (if #\၌ #\㮬 #f) (if #t #t #\婁)) (add1 -1))
            (else (if (cond (#\᳇ 2) (else #t)) #t 1))))
          ((cond
            (#t -2)
            (#\U000F27CC (char->integer (integer? #f)))
            ((char->integer (if #t #f #f)) (integer->char #f))
            (else
             (cond
              ((cond (#t #f) (1 -3) (else -2)) (if #\U0003B5D0 -3 #f))
              ((cond (#t #t) (#t 1) (#\U000190FB #f) (else #\輰)) 8)
              ((cond
                (#f #f)
                (#\⽧ #f)
                (#t #f)
                (#\삤 #f)
                (#f #\Й)
                (9 #f)
                (#\曚 #t)
                (-11 #\卓)
                (-3 -4)
                (#\U00040222 #\ീ)
                (#\ᑡ #t)
                (#t #\U00038B31)
                (#t #t)
                (#f #\U000AB7A6)
                (#\U000E8A38 #f)
                (#t -2)
                (#t #f)
                (#t #t)
                (#f #t)
                (else #\킓))
               #f)
              ((if #t #t 4) #\U0004DD71)
              ((if #t 4 -1) #f)
              (#\ꘃ (integer? #f))
              (#t #f)
              (#\禴 2)
              ((if 4 #f #t) 9)
              ((cond (#t #\즍) (else 4)) (if #\랈 9 #t))
              (#f (cond (#\鈨 -2) (#t #f) (#f #f) (else #t)))
              (#f -2)
              (#\U000D9E63 (char->integer #\㊲))
              ((cond (#t #f) (#f 4) (#t -9) (11 #f) (#f #f) (else -1))
               (integer->char #t))
              (#t (if #\u0A7C #\U00043E24 #f))
              (4 #f)
              (#f (zero? #f))
              ((abs 5) #\溜)
              ((if #\U00092817 1 #f) #f)
              ((char->integer #\쭿) #f)
              ((cond
                (#\U00043C8E #t)
                (#\U0008C779 #\ਵ)
                (#t -1)
                (#\႗ #t)
                (-6 -4)
                (#f #\촅)
                (-5 #\픑)
                (#f #t)
                (else #\玜))
               (char->integer 1))
              (else
               (cond
                (2 #t)
                (-2 #t)
                (#f #\U00087865)
                (-3 #\U0009B793)
                (#f #t)
                (#t 2)
                (#t #f)
                (-1 #t)
                (else #f))))))
           -16)
          ((if (if #f (if #t #t #f) #t) #\U000BB5A2 #t) #\U000F6EE1)
          (#f (char? (if (cond (else 3)) #t -256)))
          (#t (integer->char #t))
          ((integer? #\U0010CFA6) -1)
          ((if (cond
                (#t (cond (#\U000A714E #f) (-2 #f) (8 #t) (else #\娺)))
                (#\逡 #\넕)
                (else #t))
             #t
             #\U00036741)
           (if #f (if (cond (else #t)) (sub1 1) #t) #t))
          ((cond
            (#t #t)
            (#\├ -1)
            ((boolean? #f) (if 2 4 (if #\焰 #\U00044B1F #\U0010234E)))
            ((sub1 0) #\𥏣)
            (else (if #t (cond (1 #\霶) (else #t)) -1)))
           #t)
          (#f (add1 -4))
          (#\U000D59E3 (if #t #\U00065AF7 -3))
          ((boolean? (abs #\U000FAAB1)) #f)
          (-3 #t)
          (#t (if (add1 #t) (integer->char (char->integer 4)) #t))
          (#t #\𝇃)
          (else (cond (else #f)))))
        #t)
       ((integer->char #t) #f)
       (#f (cond (else #f)))
       ((cond (#f 1) (else #t)) 1)
       (#f #f)
       (2
        (if #f
          (cond
           ((cond
             ((add1 (cond (-32 #f) (else #f))) #f)
             (#f
              (if #f
                (if #f #\U000EA291 #f)
                (cond
                 (#t 32)
                 (#\혗 #\氶)
                 (-9 #f)
                 (#t -7)
                 (#\룕 8)
                 (4 4)
                 (else #f))))
             (else (if (if #\餹 -1 2) (integer->char #f) (zero? 1))))
            3)
           ((cond
             (-6 #t)
             (6 #\퉗)
             (#\𧩸 #\⸱)
             ((cond (#f #f) (else -2)) #f)
             ((cond (else #\왠)) (integer->char (if #f #\兜 2)))
             (#\U00103820 #\U0003B030)
             (else #t))
            #t)
           (else #t))
          #f))
       (2 2)
       (#f (zero? #\U0009A1A8))
       ((char->integer #f) -2)
       (-1 (cond (#t -2) (else -2)))
       (#\U0008D299 #\杰)
       (#f #t)
       (else (if 1 5 #\U000B8478)))
    (if (let ((y2 #\U001012CB)) 1) #\™ (let ((w0 6)) #f))
    #t)
  (let ((v2 2)) #\u2BF1))
 (-4 (integer->char #t))
 ((cond
   (#f
    (cond
     (#t #\듎)
     ((let ((b0 2)) 0) (char->integer 1))
     (#\⧐ (- #\稥))
     (else (cond (else #t)))))
   (else
    (let ((a1
           (if #f
             #\ᰙ
             (cond
              (#t 17)
              ((zero? (char->integer (cond (else -4)))) (integer->char #t))
              ((cond
                (#t #t)
                (#f #\U000460D7)
                (#\U0006F1FE (char->integer (sub1 #\雯)))
                ((cond
                  (#t #f)
                  ((cond
                    (#t #\U000F7148)
                    (#\U000D4655 #f)
                    (-7 #\U000C5F09)
                    (#\𦤔 -10)
                    (#f #\䉳)
                    (3 #t)
                    (#\U000FB1CC #f)
                    (-10 #t)
                    (#\U000E918A 2)
                    (else #t))
                   #f)
                  (#t (cond (#f #\굜) (#f #t) (#t #t) (else -1)))
                  (#\u0E89 (cond (-5 #t) (else #\쓒)))
                  (#\U000E7873 (cond (0 -2) (else -1)))
                  (#\U000BF1EC (abs #t))
                  (#f -2)
                  (else (if #\U000F67B4 1 #f)))
                 #t)
                (#f (if #t #t -10))
                (#\ⳛ #t)
                ((if #f (integer->char #\𐙈) (if #\풆 #t -7))
                 (cond
                  (#f (char->integer #f))
                  (#\⥤ #\U00098CDB)
                  ((cond
                    (#f #\U000F1B7E)
                    (#\ἢ #\墔)
                    (#f #\U000C1776)
                    (#f #f)
                    (#t #f)
                    (else 1))
                   (abs #\U00013DA7))
                  (#\U000995CE #f)
                  ((cond (-3 #f) (#t -3) (else #f)) #f)
                  (#t #\䅳)
                  (#t -3)
                  (#\u0864 #f)
                  (1 #t)
                  (#f (if #f 1 -2))
                  ((if -5 #t #f) (- 8))
                  (else (char->integer #t))))
                (#t (if (if #t #t #f) #\란 (if #\𧀭 #t 3)))
                ((char? #f)
                 (if #\U00098150 (cond (#t #f) (else -1)) (- #\U0007B9DF)))
                (else (char? #f)))
               (cond (else #t)))
              (else
               (if (if (cond
                        (#t #\U0001C8B6)
                        (#f #\U00048750)
                        (#f #\詡)
                        (else #t))
                     (if #\콰 #f -5)
                     (char? -1))
                 #t
                 #\垓))))))
      (if a1 -8 #f))))
  #\U0007C016)
 (#t #\U000FC404)
 (else #\U000AFBA6))
