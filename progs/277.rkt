#lang racket
(cond
 ((if (cond
       (#f -4)
       (#\뫹 #\U00067CBD)
       (#\踩 (if #f -1 3))
       (#f (cond (else #t)))
       ((- 4) (let ((p1 #\U000D7914)) #f))
       (1 (if #f #t #f))
       (3 #\砭)
       ((let ((w0 #\U00094DBF)) -10) (let ((b0 3)) #\䎫))
       (#t #f)
       ((if #f #t #t)
        (cond
         (2 #\텟)
         (#t #t)
         ((cond
           ((cond
             ((char->integer #t) #t)
             ((if #t #\ꣁ (cond (else #\U0006D609))) (if #\㳏 #\姱 2))
             ((if #\策 (abs -2) #t) -3)
             ((cond
               ((- #\U00079659)
                (cond
                 (#t #t)
                 (#t -5)
                 (#f #t)
                 (#\U00062A23 11)
                 (#\U00051031 #\执)
                 (#t #f)
                 (else #t)))
               (#f
                (cond
                 (#t #t)
                 (-8 #\땖)
                 (#t #t)
                 (#\갩 #\U0007D89C)
                 (#f 2)
                 (-1 -2)
                 (#f 2)
                 (else #f)))
               (else 1))
              (cond
               ((cond
                 (#t #\ꬄ)
                 (1 3)
                 (#\哢 #\猜)
                 (-3 #f)
                 (#t #\uAA38)
                 (#t #f)
                 (-4 6)
                 (#t #f)
                 (#t 1)
                 (#\鑄 #f)
                 (#f #\U000DE732)
                 (#t #t)
                 (else #f))
                #t)
               ((if #t #\➂ #\誱) #f)
               (#\텲 (cond (3 #f) (else 8)))
               ((cond (#\U000D1DB8 #f) (#t #f) (-4 #\艦) (else #\祝))
                (if #t #\肠 #t))
               (#t 2)
               (#\霽 (cond (else #\偓)))
               (#\𑁇 #\ⷃ)
               (#\U00055D07 (boolean? -3))
               (#t (abs 2))
               (-4 #t)
               ((cond
                 (#t #\冯)
                 (#t #t)
                 (#\U000DE72B #\蓛)
                 (-1 #f)
                 (2 #t)
                 (else 3))
                (char? #\U000B0D11))
               ((if -2 #t #t) (if -2 #\遛 #\U00075318))
               (else #\投)))
             (else -1))
            (integer->char #\옟))
           ((if #f
              #\U00017B45
              (cond
               ((cond
                 (-1 #f)
                 (#\𦇐 #t)
                 (#\㜥 #\銌)
                 (#t -5)
                 (#\여 1)
                 (#\U000FC685 #f)
                 (else #\垵))
                (if #f -1 #\೩))
               (7 -4)
               (#f #f)
               (else 4)))
            (if 4 (integer->char (cond (#\U0004845E #f) (else #\𧞠))) #t))
           ((cond
             ((if #t
                (cond
                 (#\᷃ #f)
                 (#f #t)
                 (-8 -2)
                 (18 #f)
                 (-1 -2)
                 (else #\U000C6623))
                (if #\쫟 #f #f))
              (integer->char (if #\U000DB9BD #\U000BD4A9 #t)))
             (#f #t)
             (#f #f)
             (#\貉 #\힙)
             (else #f))
            -5)
           (#f
            (if (cond
                 (#\U000174B6 (zero? #t))
                 ((abs 2) #\U000D50DB)
                 ((cond (0 -4) (else 4)) (if #f #f #f))
                 (#t (integer? #t))
                 (else
                  (cond
                   (#f #f)
                   (#f #\U000E7B95)
                   (#f #f)
                   (#f #t)
                   (#f #t)
                   (#t 8)
                   (18 #f)
                   (#t #\注)
                   (else #\U000B978D))))
              #f
              #t))
           ((abs (if (if #t #\檤 -2) #f #t)) #t)
           (#f #t)
           ((add1 #\넨) #f)
           (else -2))
          #\薨)
         (4 #\ᰬ)
         (#t 1)
         (#t #f)
         (#f #\ഛ)
         (#f #t)
         (#\ᨒ
          (-
           (cond
            ((cond
              (#f (char->integer #t))
              (#t (integer->char 1))
              (#f #t)
              (#\U000C828A (- #t))
              ((cond
                (#\U000D782C #f)
                (3 #t)
                (#t -3)
                (#t #t)
                (#\¨ 8)
                (16 #f)
                (else #t))
               #\솳)
              ((cond
                (#t #f)
                (3 0)
                (#f #\𨛂)
                (#f #f)
                (#f #\놅)
                (2 #\U0009F98D)
                (#\ꅉ #\U0004DB0E)
                (else #f))
               (if 1 #\U000FE2AA -4))
              (#f (cond (#\U0001E560 -4) (#t #t) (else #\U000B09EE)))
              (else #f))
             (cond ((if #\ꄣ #f #t) -2) (else #\U00034EE8)))
            (-6 #\䔎)
            (#t (cond ((- -4) #\컯) (else -16)))
            (#f (sub1 (char->integer #\Ⴁ)))
            ((zero? (if #t #\릊 #f)) (if #f #t (if #f #\꧴ #f)))
            (else (if #\U00042A7E -16 1)))))
         (-1 #\U000ECE07)
         (#\uE42E #\U000ADA62)
         (#\ࡏ -4)
         (#f -1)
         (#f 6)
         (#\𓋈 #\ꯇ)
         (3 2)
         (#\𝜢 #f)
         (else #\笍)))
       (else (let ((b2 #f)) 1)))
    #\࠴
    (cond
     ((boolean? #f) (let ((e0 #f)) #f))
     ((cond
       (#\uABAB (cond ((cond (else #t)) (integer? #\U00077168)) (else #t)))
       ((integer?
         (cond
          (#t (if #\U00041515 -5 #f))
          (#f #t)
          (#\䙠 (integer->char #\u0A5F))
          (#\蕲 0)
          ((cond
            (1 -5)
            (#\荿 1)
            (#t #f)
            (#f #t)
            (#\ể #t)
            (#f #\䓒)
            (1 4)
            (else #\U000946B2))
           #f)
          (#f
           (cond
            (-6 #\ᑭ)
            (#t #t)
            (#f #\둩)
            (#\U000B6776 -3)
            (#\焗 12)
            (#t -1)
            (#f #\窥)
            (#f #\ᴥ)
            (else -4)))
          (#\U000AB8CF #\㊩)
          (else (integer? #\鉺))))
        -2)
       (-1 (if #t 513 (cond (else #t))))
       (-2 (if #f #f #\U000F82C2))
       (#t -4)
       ((cond
         ((if #t (cond (-3 #f) (#f #\U000684EB) (else #f)) #f)
          (if (cond
               (#\U0002E9AF #\凥)
               (-4 2)
               (#\U0004FBE7 #t)
               (0 -1)
               (#f #f)
               (3 #t)
               (-1 #t)
               (#t -3)
               (#f 2)
               (#t -8)
               (#t #\uEB47)
               (-1 #f)
               (#f #\U000CDA43)
               (-1 #t)
               (#t #f)
               (#f #t)
               (else #\楕))
            4
            #t))
         (else (if #t #\U000D1B06 #f)))
        -3)
       (else #\U000AABFC))
      #f)
     (-1
      (cond
       (#f #\U000FE425)
       (#\U0010F59F #f)
       (#\桁 #\掐)
       (#\瑙 #t)
       (#t #t)
       (else #f)))
     (else (integer->char 4))))
  #t)
 (#t #f)
 ((zero? (if (cond (else 2)) (add1 #f) (char->integer #t)))
  (abs
   (cond
    (5 (if #f #\饢 -1))
    ((if #f #f 1) (if #f #t #\𝓬))
    ((let ((i1 3)) #\U001085CC) (if #t #\U000C834E #t))
    (else #f))))
 (#f
  (cond
   (#t
    (cond
     (#t (zero? -17))
     (#t #f)
     (-5 5)
     (#f (let ((n0 #\U0008AD75)) #t))
     ((let ((o0 2)) 4) #t)
     (0 #f)
     (#f (char? 4))
     ((boolean? 2) #\↭)
     (else (cond (else #f)))))
   ((cond
     (#f #f)
     (6
      (cond
       (#t #f)
       (4 -4)
       (#f #\넞)
       (#f #t)
       ((char->integer
         (cond
          (#f #t)
          ((cond (else (cond (#t #f) (#t #f) (else #f)))) -1)
          (#\U00041E4C #f)
          (else (zero? -3))))
        -2)
       (#f 4)
       ((abs 1) #t)
       (-3 -1)
       (else #\U000E30E4)))
     (else (char->integer #f)))
    #\U001073CE)
   (else (if #t #f #\ꨗ))))
 (#t #f)
 (0 #t)
 ((if #t
    (cond
     ((if #t #f 20) (if (if #\踟 3 #t) (char->integer #t) #\뇱))
     (else (if #\褒 2 1)))
    #t)
  (char->integer (if (if 5 #t -2) (integer->char #\𦭟) (let ((e2 #\膊)) 1))))
 (else (integer? #f)))
