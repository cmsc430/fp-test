#lang racket
(cond
 (#t (integer? (zero? #t)))
 ((boolean? (let ((b1 (add1 2))) 4)) #t)
 (-1 (integer->char #\U0004EC7E))
 ((if (cond ((if 0 #f #f) #t) (else #\U000802D8)) (zero? (cond (else #\봠))) #f)
  #\U000CC83D)
 (#f #\U00109326)
 (#f #t)
 (-2 #f)
 ((char->integer #\U00042470)
  (let ((l0
         (if (cond
              (0
               (cond
                (-5 3)
                (-1 #t)
                ((if #t 1 (cond (#f #t) (#t #t) (4 #\䌈) (else #\U000C2939)))
                 (sub1 #\U0010278C))
                (#f #f)
                (#t #f)
                ((if (if 3 -1 #f) (if 3 #f #f) #f)
                 (cond
                  ((if #f #f #t)
                   (cond (#f #\U0003681C) (#\U000B539C #t) (else -2)))
                  (#\ꏕ (if -16 #t 3))
                  (#t #\螤)
                  (else #\늖)))
                (#\U0009D227 1)
                ((cond
                  ((cond (#t -17) (-21 #f) (else #t)) #\U000DB203)
                  (#\墜 #t)
                  ((boolean? #\U000D52FD)
                   (cond
                    (#f #\U0007B2C5)
                    (#t #f)
                    (4 #\U000A3531)
                    (#t #t)
                    (else #t)))
                  (#t (char->integer #\U000CB9DD))
                  ((if #t #f 1) 2)
                  ((integer? #f) #\߬)
                  (-2 #f)
                  (16 1)
                  ((sub1 #f)
                   (cond
                    (#f #\懗)
                    (#f #\U000C8A1E)
                    (#\贜 #\𪦵)
                    (#\닣 #\U000591D7)
                    (2 #f)
                    (#\U000B81BC #t)
                    (#t -4)
                    (else #\ߨ)))
                  ((if #f #t #\U00068872) (if #t #\嚚 #t))
                  ((cond (else #\U0004ABA8)) #t)
                  (#t #\U000371EE)
                  ((integer->char #t)
                   (cond
                    (#f #f)
                    (-1 #\U000C3068)
                    (#f #t)
                    (#f #f)
                    (#f #f)
                    (#\U000C340C #\٠)
                    (#\U000DCCE8 #f)
                    (else #f)))
                  ((cond (3 5) (1 #\U0006129C) (#t #f) (else 1))
                   (integer->char -4))
                  (3 #\鸽)
                  (#\U00059120 (cond (#t 1) (-7 #f) (else -3)))
                  (#\U000A8151 (cond (#f #t) (else #t)))
                  (#f
                   (cond
                    (#\킷 #f)
                    (#f -10)
                    (-3 #t)
                    (#\犍 1)
                    (#t #\U000BB0CA)
                    (#t #\U000920BA)
                    (#f #\ㅱ)
                    (#t 3)
                    (#f #f)
                    (else 5)))
                  (#t #f)
                  (else #t))
                 #t)
                (#f (cond (else #t)))
                (else
                 (char->integer
                  (cond
                   (#\タ #\U000CBA9F)
                   (#\햎 -2)
                   (#\𧀓 #t)
                   (#t 17)
                   (#f #f)
                   (else #\U0007600F))))))
              ((if (cond
                    (#t 3)
                    ((boolean? #f) (boolean? #t))
                    ((cond
                      (2 #t)
                      (#f #f)
                      (#f #t)
                      (#f #\U000901B6)
                      (7 #\쭭)
                      (#f #t)
                      (#f #t)
                      (#f #t)
                      (#t #\䍩)
                      (#t #f)
                      (-1 1)
                      (2 #t)
                      (-5 #\㓱)
                      (#f #t)
                      (#\묚 #f)
                      (#f 2)
                      (#f 1)
                      (#\轓 -2)
                      (#\U000874BB #f)
                      (#\U000D79BB #f)
                      (#t #f)
                      (#\U0008DD90 -1)
                      (else #t))
                     (cond (#f #f) (#\U000BBF48 #\u089D) (else -6)))
                    ((zero? 1) (integer? #f))
                    (0 #f)
                    ((integer->char #\応) #\沑)
                    ((cond
                      (#\砑 #f)
                      (#\𫞖 #t)
                      (#\⫪ #t)
                      (#f #\獤)
                      (#t #\緓)
                      (#t #t)
                      (#t -1)
                      (#t #\U000BAE9C)
                      (else #t))
                     (cond (#f #\䏭) (else #f)))
                    (#t (integer->char #\U000D94C2))
                    (#\U000437BE #f)
                    (#f (- #\U000FF237))
                    (4 (integer->char #t))
                    (#f (if #t #t #t))
                    (#t (if #t #f -3))
                    ((if -16 #t -7)
                     (cond
                      (0 4)
                      (#\U000DAC82 #f)
                      (#t 1)
                      (2 -1)
                      (#\U000DA4D0 #t)
                      (-5 4)
                      (else #\U000421D7)))
                    (#t (if #t #f #\뗉))
                    (else #f))
                 (if #f
                   (cond (#t #f) (#f -2) (#t -2) (#t #\U000E1FCD) (else 3))
                   #t)
                 #\U000D3055)
               #\U0004E58E)
              ((if (if #f #f #t) -5 3)
               (char? (cond (#t -2) (else (if #f -2 #t)))))
              (#t
               (cond
                (#t 2)
                (-3 17)
                (#f #t)
                (-1 -2)
                ((integer? #t) -2)
                (else (add1 #t))))
              ((char?
                (cond
                 ((cond
                   (2 #\U000C043C)
                   (#t #f)
                   (#\뾆 -2)
                   (2 4)
                   (#t -4)
                   (#t #f)
                   (4 8)
                   (else #f))
                  4)
                 (#f (if #f #t #\U00019910))
                 (0 (cond (#f 2) (#t #t) (#f #f) (else #t)))
                 (else (zero? #t))))
               #t)
              (-1
               (cond
                ((if #t #\𧱟 (abs #\U0005534E)) #\U0001FAED)
                ((integer?
                  (cond
                   (2 #\횳)
                   (#\尺 #t)
                   (#f #\U000C5C3C)
                   (#t #f)
                   (#f #f)
                   (#f #f)
                   (#\낭 #t)
                   (-1 #t)
                   (-2 #t)
                   (#\U00071CB2 #\U00095A0A)
                   (4 #f)
                   (else #t)))
                 (add1 #f))
                ((cond
                  ((if #f #\U00019549 -8) (- #\ꐸ))
                  (#f (if 3 #f #t))
                  (else (char->integer #t)))
                 (if (cond
                      (#f #t)
                      (#\U00075FFA #t)
                      (4 #f)
                      (#t #t)
                      (#t -2)
                      (#t 2)
                      (#\뱘 #\U00056CEA)
                      (#t #f)
                      (#t #\鹰)
                      (#t #\솀)
                      (#f #\U0005F0EA)
                      (else #t))
                   #t
                   (cond (#f #t) (#f #f) (else #t))))
                ((if #t #f #\U000C4832) #t)
                (-2
                 (if (cond (-3 4) (#t #t) (else #t))
                   (cond (#f -2) (#t 18) (else #\됾))
                   (if -1 1 -2)))
                ((cond
                  (1 #f)
                  ((if #t 3 #\U000E7876) (if #t #\U0004E2F4 #\U000B2F25))
                  (#t (if #t #\𫟑 #t))
                  (#\𪞏 (cond (#f #\𢡶) (else 0)))
                  (else #t))
                 (integer->char #t))
                ((abs #\嫪) #\U000159B0)
                (#f #t)
                (#f (if (if #t #f #\厩) #t 1))
                (else 3)))
              (#\U0008E7B4 #t)
              (else 4))
           (let ((j2 #f)) #\칳)
           #t)))
    (let ((n1 #\괍)) #f)))
 (#t #t)
 (else (cond (3 #\U000383A0) (else #f))))
