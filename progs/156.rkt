#lang racket
(cond
 ((cond
   ((cond
     ((cond ((integer? -5) (if #t 1 #t)) (#t #t) (else #t)) (cond (else #\íÅ≠)))
     (#\·∫Ø #f)
     (#f #\U0008DE52)
     ((cond
       (#f #t)
       ((cond (else #\Áéñ)) (cond (#f #f) (#f #t) (#\Ïß∂ #\U000D0B16) (else #t)))
       (#\Â°ô 2)
       ((if #t #t #\„ñ™) #\U000751CB)
       ((if #t #t 2) #t)
       ((if -1 #f #\u209F) #t)
       (else #\U0008EB8E))
      (cond
       ((char->integer #t) (if #\ÎπÄ #f #f))
       (#t 4)
       (-2 #f)
       ((cond (#t #f) (else #f)) (integer? #\·•å))
       ((if #\U00067B75 #f 2) (char? #f))
       ((if #\Î∂∫ 1 #f) 4)
       ((boolean? 1) #f)
       (#t (integer->char #f))
       (else #t)))
     ((if #\U000A9BEF (if #f -1 #\U0006F825) (if #f #f #t))
      (cond
       ((cond (-2 #f) (#\·Çà #f) (else #\U0009D5BE)) #t)
       ((cond (#f #\U0006ACCD) (#\U000539A8 #t) (#t 33) (#f #t) (else #t))
        (if #\U00078FC2 #\U00092BCD -1))
       (#\U00082E3E #\U0001B6FF)
       (#f (if #f #t #f))
       ((cond (else #f)) (if #\„¶é 4 #f))
       ((zero? #t) #t)
       (#\Íöí (if #f #\U000E6806 #\‚Äø))
       (#f (abs #f))
       (0 -17)
       (#t (zero? -2))
       ((if #\Î†® #f #t) 3)
       (#t
        (cond
         (#\ËÖ≤ -1)
         (1 #\U000C6C98)
         (#\ÁàÇ #\U000AD9FE)
         (#t #\U00019466)
         (#f #f)
         (2 #f)
         (#t -2)
         (#\Êπ± #\‰ÅΩ)
         (#t 1)
         (#\·πø #t)
         (#\ÏøÆ #f)
         (#t #t)
         (-3 #f)
         (#f #t)
         (-6 4)
         (-1 #t)
         (#t #\È®Ω)
         (#t #t)
         (#t #\Íúµ)
         (#\‚èë #t)
         (#\Àù #\U0006277A)
         (#f -18)
         (#\ËÄã #\ÎÜ≤)
         (3 #\U000A8E4A)
         (else -2)))
       (else #\U0010C2B7)))
     (else
      (if (zero? #\uAB97)
        (cond
         (8 #t)
         (#t #t)
         (#\U0006420B #f)
         (#t #f)
         (#t #\È®ú)
         (#f -2)
         (else 0))
        #\È≠°)))
    (char->integer (if (integer? #f) #\ËüÑ -5)))
   (#f #t)
   (#f
    (if #t
      #f
      (cond
       (#f #\U000F90BA)
       (#t #t)
       ((cond (#f #f) (#f #\U000C76E0) (#t #\Îìé) (#t #f) (else #f))
        (if -34 #\‰´ë #f))
       (#f
        (cond
         (#t #\Ê¥ò)
         (4 #\‰üß)
         (#f #\Êë•)
         (-8 #\U000C1C04)
         (#f #\U000EE79B)
         (2 #\U0010C75B)
         (-4 #t)
         (#t #f)
         (#t #\U000A67F7)
         (#\Á¨Ñ #t)
         (#t #t)
         (#\U0003CFE8 -1)
         (else #t)))
       ((char? #\U000D6957) (if #t 6 1))
       (#f #t)
       ((integer->char #\Ïúõ) (cond (else #\‰¶´)))
       ((cond (else #\U0006E3FB)) #t)
       (else (if #f #\U0009B8B5 #t)))))
   ((add1 (cond (else (cond (else #t))))) 0)
   (else
    (cond
     ((char? #t) #f)
     ((if #t (- #\·®Ñ) (cond (else #t))) (char? (char->integer #\U00103DF7)))
     (else #t))))
  #t)
 (#f (let ((r0 (cond (else (let ((j0 #t)) #t))))) (sub1 2)))
 ((let ((r0 (sub1 (char->integer #t)))) #\U000AF1A8) #t)
 (#f #\U000DCC0C)
 ((cond (else #t)) #f)
 ((if #f
    #t
    (if (if #t
          (cond
           (#\U0008FF62 #f)
           (#f (cond (-16 -3) (#\ÏÆú #\Ï≤ë) (else #t)))
           (-16 (integer->char #\‰π±))
           (-1 5)
           (else (cond (else #\U000C72CC))))
          (cond
           ((add1 1) (if -3 #f -1))
           (#t (- #f))
           ((add1 #t) -2)
           (#t (char? #t))
           ((zero? #f) #f)
           (#f (cond (#f -1) (else #t)))
           (#f (if #\U00083829 #\·µ≠ #f))
           (#t #f)
           ((cond (#t #f) (#\Î§∏ #t) (-1 #t) (#t -4) (else #\U0005811A)) (- #t))
           (#\U000A0556 (if #\·ìµ #\U000B4063 1))
           (-5 (abs #t))
           (-2 (cond (-4 #\U0009CA5D) (#\„îÄ #f) (#f #f) (#f -2) (else #t)))
           ((- #\U00104281) (- #\Ëùò))
           (#f (if #\U000CD792 -1 #\ÍÜÇ))
           ((cond (1 -8) (3 #t) (else -1)) (cond (-2 #f) (else #t)))
           (3 (- -2))
           (-1 #t)
           (#\U00105619 #f)
           (-2 (cond (else #f)))
           (3
            (cond
             (#t #\Â™≠)
             (#t #\U00090DEE)
             (#f #f)
             (#f #\U000D9503)
             (1 #f)
             (#t #\U000CAAED)
             (#t -1)
             (else #\Á∂Ä)))
           ((if #\Í∞• 0 0) #f)
           ((sub1 #\U000BEE41) (if 5 #t #f))
           (#\U000A2E6B #\U000FD7F2)
           (#t 2)
           ((cond (#\Í¢§ #\U00083CDB) (#\U000CF20B -2) (else #t)) -1)
           ((cond (#\U000796A4 #f) (0 #f) (else #f)) (char? 10))
           (3 (zero? #f))
           (0 33)
           (#t (integer->char #t))
           ((cond
             (#t #t)
             (-2 #\ÊÑÜ)
             (4 #t)
             (#f 64)
             (-2 -1)
             (#\ÁΩ© #f)
             (#\U00053AD7 -2)
             (else #\U000CCC56))
            #\·∑ø)
           ((cond (#t -5) (else #\U0009018D)) #f)
           (-16 #t)
           (1 #f)
           ((abs #\U0007C90C) (if #t #\U000AD002 -2))
           ((if #t 2 #\„Üú) 1)
           (#t (if 2 #t -5))
           ((if #t #f #\Îáê) #\U00034A34)
           ((if #f #t #t)
            (cond
             (#f 0)
             (#f #\U000D4167)
             (#t #\„§ü)
             (#f 0)
             (#t #\U000BAECF)
             (else #t)))
           ((cond (#f 2) (#f #\ßâõ) (else #\U00042FF0)) #t)
           ((cond (-3 1) (3 #\ÊãÜ) (#\U0009376A #f) (#f #\·íñ) (else -2))
            (if #\U00051D26 #\U000A9CAC #\U000604F3))
           ((cond (else #t)) (abs #\U000F2A7D))
           ((if 5 #\ÊúÑ #f) -5)
           (#\U000FB987 #t)
           (#f (abs #t))
           (#t 16)
           (#\U0010F594 (add1 #\Î±Æ))
           ((cond (-4 2) (else -3)) (if #f #\U0005D47A #f))
           (#t (cond (-5 11) (#f 1) (#f 3) (else -2)))
           (else (cond (#f #t) (#t #t) (else -3)))))
      #t
      (- #\u0BDA)))
  (let ((j2 #f)) -4))
 (#t (add1 #t))
 (#f
  (cond
   ((let ((i1 #f)) i1) #f)
   (-4 #t)
   (1 1)
   ((cond
     (#f #\Ëü≤)
     (#f (char? 3))
     (#\U000E0933 (if #f #\U000E17A4 #\Ïûù))
     (#t 2)
     ((integer? 2) (let ((y1 #f)) 1))
     ((cond (else #f)) #t)
     (#\ËØ¥ (if #f 0 #\U00017A2F))
     (#\‚åº (if #\È≥ö #t #t))
     ((integer->char -2) (boolean? 2))
     (#\U0005E237 6)
     ((if #t
        (cond
         (-1 #t)
         (#\ß•ö #\ÎÇò)
         ((add1 #\U00017310) #t)
         (#t (integer? (zero? #\‡¥æ)))
         (#\U000F7F66 #t)
         (#t 5)
         (#f (if #f 2 (sub1 #f)))
         (else 1))
        #\U00053516)
      7)
     ((if #f -258 #\‰èÄ) (zero? 1))
     (else #t))
    -1)
   ((cond
     (else
      (cond
       (#t #f)
       (#f #f)
       (-1 1)
       ((cond
         (-1 #t)
         (1 (cond (#f -4) (#f #f) (2 #f) (#t 3) (0 #\„ÆΩ) (else -1)))
         (#\U000797F7
          (cond
           (#t #f)
           (1 #\Íîä)
           (#t -5)
           (1 #f)
           (#t #\≈ª)
           (#\ÁîÉ #\U0004ED81)
           (#t 5)
           (#\‰öä #t)
           (#t #\©•ó)
           (5 -4)
           (#f #f)
           (1 -3)
           (#t -3)
           (#t #t)
           (#f #\Ìó∂)
           (#t 3)
           (else #\Í≤Å)))
         ((cond (#t 1) (1 #f) (else #\Íáì)) (if #t #t #t))
         ((abs #t) 4)
         ((if #f #\ÊØØ #t) (abs #\U000D4A08))
         (#f 5)
         (#f #\‰º¢)
         (else #t))
        (cond
         ((if #f #f #t) #\‰¥ä)
         ((if 2 #\U000B9BED #f) (zero? 2))
         ((- #f) (zero? -1))
         ((char? #f) #t)
         ((integer->char #t) (cond (else 5)))
         (#t #\ÈØø)
         ((sub1 #t) #\U000E109C)
         ((cond (-2 #\U000C35E5) (#f #t) (else #t)) #f)
         (#f #t)
         (-1 (if #t #t #t))
         (#f (cond (else #f)))
         (8 (cond (else #f)))
         (3 (abs -1))
         ((cond (#f #t) (else #t)) #t)
         (-1 #\U000E22A8)
         (2 (if 2 #f #f))
         ((if 4 #\U00044EE9 5) #f)
         ((cond (else #f)) #t)
         (#\·¢ê #f)
         ((if #\uA638 #\Íó¨ #t) #\U000E97F9)
         (else #f)))
       ((if #f (integer? #f) #\Á•ß) (integer->char -2))
       (else
        (if (cond (#t #f) (-1 #f) (-2 #t) (#t 2) (else 2))
          (if #f #f #\Èõ≥)
          (cond (#t #t) (else -1)))))))
    (if #f #f (let ((y0 (if #t #f #\U000759CC))) #\‡®æ)))
   ((if #\U000E2DC5 -2 #\‡∞ñ) #t)
   (#f (let ((x2 #f)) x2))
   ((let ((l2 5)) l2) #t)
   ((cond
     (#\‚•Ö (let ((k1 #t)) #f))
     ((if -4 #f 2) #t)
     (2 (if #\U0008891B #\U0006D2C3 #f))
     (else (boolean? #t)))
    (cond
     (#\U00054D97 #\U000EA9FD)
     (#f (let ((l0 #f)) #f))
     (#f (if #f #f 17))
     (#f (cond (#f #t) (0 8) (2 #f) (#f 3) (else #\‰õà)))
     ((if #\Ê≤† #t #\Ëóë) #t)
     ((let ((b1 #\U000E3F20)) b1) #\U000F0F65)
     (#\U000EAA4F (cond (#t -5) (#f #t) (#\U00106794 #\Ïøº) (-4 #t) (else -3)))
     (#f #\„∏õ)
     (-5 #t)
     (else (sub1 -2))))
   (#f -8)
   (#\U0010F053 #f)
   (#f (add1 (char? (char? #f))))
   ((add1 (if #f #f #f)) (let ((i1 #\U0007B1F0)) (zero? #t)))
   ((if (zero?
         (if #t
           #\Âúé
           (cond
            (#\„†ü #\‚º®)
            (#t #f)
            (#t 8)
            (#f #t)
            (#f #\ÏªÇ)
            (-5 -6)
            (#f #t)
            (#\U0003766E 4)
            (#\U000E1C67 #f)
            (#t #t)
            (8 #\„∑™)
            (#\U0009F556 #f)
            (-5 #f)
            (#\‰ìù #f)
            (3 #\Èó©)
            (#f -2)
            (#t 1)
            (else -8))))
      (if (cond
           (#f #\U000BB58B)
           (-1 #t)
           ((cond (#t #\‰´ï) (#t -2) (#f 2) (else #t)) #f)
           (else #t))
        #t
        -3)
      #f)
    #\Â•â)
   (else 8)))
 (else #f))
