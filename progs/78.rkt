#lang racket
(cond
 (1
  (cond
   (#f (add1 #t))
   (#f (let ((t1 (integer->char -8))) #f))
   ((zero? (if #\U0009C234 -4 #f)) -2)
   ((let ((r1
           (cond
            (2 #t)
            (#t #f)
            (-4
             (cond
              ((sub1 #t) (integer->char -4))
              ((sub1 #\匮) #\U000342C1)
              (9 (if #\珱 4 -4))
              ((cond (#f (cond (else 1))) (else #f)) 7)
              (else
               (cond
                ((char->integer (if 5 1 #\葬)) (zero? #t))
                (#f #\௨)
                ((cond
                  ((integer? #f)
                   (cond
                    (#\u0892 #\U00067BE4)
                    (#f #\齐)
                    (#f 2)
                    (#t #f)
                    (#\堟 #t)
                    (#t 5)
                    (4 #\浈)
                    (else #\़)))
                  ((abs #\U00084A75)
                   (cond
                    (#t #\瞩)
                    (#t -3)
                    (#f 7)
                    (#t #f)
                    (#\寤 3)
                    (#f #\U0003E12A)
                    (#\鱎 #\U000D47D5)
                    (#f #\풇)
                    (else #\홖)))
                  ((if #t #f #f) (add1 #t))
                  (-1 #t)
                  (else (char->integer #\旞)))
                 (char? 2))
                ((zero? #\즨) 5)
                ((abs (cond (else #t))) 2)
                (#\U00105CB5 #t)
                ((cond
                  (#f #\ᴁ)
                  (#f #f)
                  ((char->integer #t) #t)
                  (#t #t)
                  ((cond (#t #f) (#t #t) (#\⡐ #f) (#\ꜷ -3) (#t #f) (else -2))
                   4)
                  ((cond
                    (-3 #f)
                    (-3 #t)
                    (#t #\켞)
                    (#\U0003C795 #\췫)
                    (#t #f)
                    (#f 1)
                    (#f -2)
                    (#t -2)
                    (#\U000F8DF3 #\U000129CC)
                    (#t #f)
                    (#t #t)
                    (-2 #\呭)
                    (#f #f)
                    (-1 -16)
                    (#\U000F77D1 #f)
                    (#\U00083BF8 #f)
                    (#f #t)
                    (else -9))
                   #\렎)
                  (#f
                   (cond
                    (#t #f)
                    (16 #f)
                    (#f #t)
                    (#\釗 #f)
                    (#f #f)
                    (#\井 #t)
                    (#\U000E3A3B #f)
                    (#t #\讃)
                    (else #\䜓)))
                  ((cond (else 1))
                   (cond (#\U000AF92D #f) (#t #\칑) (#t #\U00069753) (else #f)))
                  (-1 (integer? #t))
                  (#t #f)
                  (else (char? -3)))
                 #\U0005E0FA)
                (16
                 (cond
                  ((cond (-4 #\牗) (1 2) (#f #f) (#t #\U000323E2) (else -1)) #t)
                  (-10 1)
                  (#\躺 #f)
                  (#f #f)
                  (else #\䉙)))
                ((if (integer->char #t) (if #t #f #f) (if #f #\ᒩ #f))
                 (cond
                  ((if 4 1 4) (integer? 0))
                  ((abs #\煦) 4)
                  (#\U0002B73F #t)
                  ((abs 0) #f)
                  (else #f)))
                (3
                 (cond
                  (#\輪 (if #\ჾ #t #f))
                  ((if #\U000D7861 #f #\囙) #f)
                  ((cond
                    (-1 #t)
                    (#f #\랖)
                    (-2 #f)
                    (-3 -4)
                    (-4 #\㡲)
                    (3 #f)
                    (else #f))
                   #\焸)
                  ((integer? #t) #f)
                  (#t (cond (-5 -1) (#t 2) (else #t)))
                  (#f (- #t))
                  ((if #t #\♊ #\ꀏ) (if #t -2 #\Ꮴ))
                  (-1 #f)
                  ((if -2 #\㵬 #\U000B1B17) #f)
                  ((cond
                    (1 -2)
                    (-4 4)
                    (-1 #\U00099D05)
                    (#f #t)
                    (#f #t)
                    (#f -4)
                    (#\춨 #t)
                    (#t #f)
                    (8 #\U000654C8)
                    (-1 #f)
                    (#t #t)
                    (#t 2)
                    (else #f))
                   #t)
                  ((cond
                    (#t #\U00065A5B)
                    (#t #f)
                    (#\U0007E175 #f)
                    (else #\U0002CDAB))
                   (boolean? #\褑))
                  ((if #f 3 #t) #\U000F7371)
                  ((cond (2 #t) (#f #\ጪ) (4 #t) (#\殙 #f) (#t #f) (else #\媚))
                   (cond
                    (-1 #f)
                    (#\U0002D94A #f)
                    (#f #t)
                    (#t #\U000470DA)
                    (#\뛺 #f)
                    (8 #\쎑)
                    (#f #t)
                    (3 2)
                    (else #\÷)))
                  (#t 3)
                  (-4 -3)
                  (3 #\U0006E97B)
                  (else 2)))
                (#\U0005DB17 (if #t #f (if #\U0005FF34 #f #f)))
                ((cond
                  (#\uAB96 (if #\U00090C0C #t #\폚))
                  (#\U0007FBA5 #f)
                  (else #\U000B0AFE))
                 (integer->char #\꣗))
                (-2 #f)
                (#\⃔ #\⿳)
                (#t (zero? #t))
                ((cond
                  ((add1 #\照) (if #t #\U000AF513 -13))
                  (-4 (integer->char -3))
                  ((cond
                    (0 #t)
                    (2 #f)
                    (2 #\U00011540)
                    (#\uE85D #f)
                    (1 -1)
                    (#f #f)
                    (#\橿 -5)
                    (#f #f)
                    (#t #f)
                    (#f 3)
                    (#t 4)
                    (-2 #f)
                    (#f -1)
                    (4 3)
                    (else #f))
                   #f)
                  ((sub1 #f) (cond (else #f)))
                  (else (integer? #f)))
                 #t)
                (#\U0005C6FC #\u2BBA)
                ((add1 (- -4))
                 (cond
                  ((add1 -2)
                   (cond
                    (#\刪 #t)
                    (#\롇 #\U000306D2)
                    (#f #f)
                    (#\饥 128)
                    (3 #t)
                    (1 #f)
                    (else #\쏣)))
                  (else #f)))
                (1 (sub1 (cond (#t #\镑) (#t #f) (-2 #t) (else #\U000980ED))))
                ((sub1 #\᧚) (if #f (cond (else #t)) #\滊))
                (#t (add1 0))
                ((if (cond
                      (#f #t)
                      (#t #t)
                      (#f 1)
                      (#f #f)
                      (#f #t)
                      (#f #t)
                      (#f #\ኤ)
                      (#f #\U000E59BD)
                      (#f #\塬)
                      (#t #t)
                      (#t #f)
                      (1 #\U0004F267)
                      (#\U0008ED25 #f)
                      (#t #f)
                      (else #f))
                   (cond
                    (#\U000541F1 #\U0005C815)
                    (#f #f)
                    (-2 #\醜)
                    (#t #f)
                    (2 #\U00047F8A)
                    (else #t))
                   (cond (#t #\訳) (else #t)))
                 #t)
                ((cond
                  ((cond (#f #f) (else #t)) (char->integer #f))
                  (#f (if #\U0005878E #t #f))
                  (#t #\U0001E097)
                  ((cond (#t #t) (#f #\쫌) (else #\U000EF517)) (zero? #\儃))
                  (#t
                   (cond
                    (#f #\U000A315A)
                    (#f #f)
                    (#f 4)
                    (#\뙠 1)
                    (#f #\䷼)
                    (#t #t)
                    (2 2)
                    (else #f)))
                  ((if #f #\U0007AAD5 #\U000EBAD5) (if #t #\尊 #f))
                  (10 #f)
                  (-8 (add1 #\恕))
                  ((if #f #\U0002FC5E #t) #f)
                  (#\U000D2D28 (integer->char #f))
                  (#t (cond (else #f)))
                  ((- -1) #\U0009BF72)
                  (#f #\U000EEE90)
                  (else (if 2 #t #f)))
                 #f)
                ((if #\U000EBDC8 (char? #\U0010DAA4) (cond (else #t)))
                 (integer->char
                  (cond (#\U000A3812 -2) (#t #t) (16 #\簅) (3 #f) (else #t))))
                ((abs #f) -1)
                (#\溿 #\U000FC0A9)
                ((if (if #\U00085911 -3 #f) #\⌐ #t)
                 (integer? (cond (#f #f) (#f #t) (else #f))))
                (#t (char? (integer->char #t)))
                ((if (cond (-2 #t) (#f #\U0002CAEA) (else #\踌))
                   #\U00017A3E
                   (cond (#f #f) (1 #\U00048EEA) (else #t)))
                 (cond
                  ((cond (#t #t) (else -5)) -5)
                  ((cond (else #f)) -3)
                  ((if -1 #f #t) #t)
                  ((if 2 #t #\ࢰ) #\䒏)
                  (else (sub1 #f))))
                (else (integer->char (char->integer #t)))))))
            (#f #\礧)
            ((if (add1
                  (cond
                   ((if -4 #t #\沽) 2)
                   ((integer->char 1) 0)
                   (#\䊹
                    (cond
                     (#\ݮ #t)
                     (3 #f)
                     (2 #f)
                     (5 #t)
                     (#f #t)
                     (#\ꉐ #\U0009DB2D)
                     (-4 #t)
                     (#t #f)
                     (else #\깸)))
                   (else 6)))
               #\흟
               (if (if #f #\䞀 #t) #f (char->integer #t)))
             0)
            (-2 #t)
            (else #\U000CC456))))
      #f)
    #\U000119C8)
   ((let ((g1 #\蛋)) g1)
    (cond
     (#\␙
      (cond
       (#t
        (cond
         (#t 0)
         ((cond (#t #\𩀿) (-4 #t) (#\U00016C85 5) (else #t))
          (cond
           (#\U0001E221 #t)
           (#\辮 #\韄)
           (#t #\uEA99)
           (#\u0880 #t)
           (#t #f)
           (#f 1)
           (#\U0005E920 #\㣏)
           (-2 #\U000DA927)
           (else #f)))
         (#f (if 0 #f #t))
         (#t #\ᙐ)
         (else (if #t #t #\Ἁ))))
       ((abs #t) #t)
       (else #t)))
     (-1 (cond (else #f)))
     (#f -1)
     (#t #f)
     (else (integer? (add1 (if -1 #t #f))))))
   (-2 (zero? #t))
   (1 (- #\U00049098))
   ((if 1
      (cond
       (#\儓 #t)
       (4 -3)
       (5 #t)
       (-20 #f)
       (#\U00016FB2
        (if (integer? #t)
          (cond (else #t))
          (cond
           ((cond
             ((if #t 5 #\뾿) -3)
             (#t (boolean? #\䭍))
             (else (cond (#\U00049B6C #t) (else 1))))
            #\U00094354)
           (#f (if #t #t #t))
           (#f (boolean? -2))
           (#f (integer? (boolean? 5)))
           ((sub1
             (cond
              (-5 #f)
              (#f #\굹)
              (#f 3)
              (#\⪰ #t)
              (#f #t)
              (5 #f)
              (#\⛆ #t)
              (else -1)))
            #\刱)
           (#\ቿ (if (if #t -1 #\U000A28AE) (integer? #\U001037FE) (char? #t)))
           ((if 8 #f (add1 #f)) #f)
           (#t #t)
           ((boolean? (cond (9 -38) (else #f))) #\U0001544B)
           (#t
            (cond
             (#f (if #f #\U00105BF7 0))
             (#t (if 4 20 #t))
             (#\U000E5AF4 #\U00042C6B)
             (else (cond (-2 #\Λ) (#t #t) (#\畬 4) (else #f)))))
           (#t
            (cond
             ((char->integer 2) (cond (else #t)))
             (-4 (cond (#\든 2) (#t #\U00089BEC) (else #\U00070427)))
             ((if -1 #\㻍 -5) (cond (else 1)))
             (else (if #t #\ㆥ -4))))
           (2 #t)
           (else #\U000886F3))))
       (#f -1)
       (#\U0007B0F5 -4)
       (#\嗶 #f)
       (else #\U0002E95F))
      #f)
    (let ((o1 #f)) #f))
   ((cond
     ((let ((c2 #t)) #t) (cond (else #t)))
     (#f #f)
     (#f (char->integer #f))
     ((let ((j0 #f)) #f) #t)
     (else #\昫))
    -19)
   (-3 (zero? (cond (else 1))))
   (#t (abs (let ((s0 (sub1 #t))) 3)))
   (else (boolean? (if #f #f #\筲)))))
 (#f
  (cond
   (4 -3)
   ((abs #\U000C77FB) #t)
   (#\U00092FCB (let ((i1 (cond (else #t)))) (if #t #t #\牿)))
   (else -1)))
 ((cond
   ((cond ((if #\ᶛ #t 1) 4) (else (cond (else #f)))) #t)
   (#f (let ((x2 -1)) #t))
   (else #\屹))
  (cond
   ((cond
     ((let ((s0 -1)) #\郿) (if #t #f #\U00037A2F))
     (#t #\⽮)
     (-16 #f)
     (#\餔 2)
     ((cond (else (integer->char (cond (else (if #f #f 5))))))
      (let ((i0 4)) #t))
     (else #f))
    (let ((b0 -2)) (cond (else #f))))
   (1 #f)
   (else #f)))
 ((cond
   (#f (let ((e0 (if #t #t #t))) #t))
   ((if #f #t #t) 16)
   ((cond ((if #t #\覫 #\㗻) #f) (else #t)) #t)
   ((cond
     ((if 5 #\uA7E9 #f)
      (cond
       (-1 #f)
       (#t #\U00071FEF)
       (1 #t)
       (#\羀 2)
       (2 #\赇)
       (#\U000D7979 #f)
       (#\U000F49B2 3)
       (else #\늶)))
     (else -2))
    (cond
     ((char->integer #\𧊲) #t)
     (#f (cond (else #f)))
     ((if (cond
           ((cond
             (3 #f)
             (6 (cond (3 -2) (-11 #t) (#f 0) (#f #t) (else #t)))
             (#f #f)
             ((add1 #f) #t)
             (#\쏊 #f)
             ((cond (#\鰶 #\펭) (else #t)) (char->integer 5))
             ((sub1 16) #\䣸)
             (#t (if #t #\U000B86F7 -1))
             (#t -1)
             ((char->integer #t) #\㴡)
             (else #f))
            #\螾)
           (#t #t)
           (else #\ⓨ))
        #f
        -9)
      #f)
     ((cond
       ((cond (else (char? #t))) -5)
       (#f 3)
       (#\鞩 32)
       (#\᳔ 17)
       (#t -3)
       (#f #t)
       (#f #\舕)
       (else #f))
      (cond (else #f)))
     (#f (cond (#f #t) (#t -1) (#\U0010C039 #f) (else #t)))
     (else 8)))
   (#\꒦ -1)
   ((boolean? #f) #f)
   ((let ((o2 (let ((b1 1)) b1))) #\䬂)
    (if (let ((t1 (if 5 (zero? (zero? #t)) (if #f (add1 #f) #\U0007094D)))) -1)
      -6
      (let ((s0 #\U00097C86)) #f)))
   (4
    (let ((q1
           (cond
            ((char?
              (cond
               (#f (integer? #f))
               (#t (if #t #\U00103CAA #\쨒))
               (#\훧 (add1 #\U00102387))
               ((cond (else #t))
                (cond
                 (2 #\添)
                 (#f #f)
                 (#f #f)
                 (-2 #\U000BE1B8)
                 (#t #t)
                 (2 #\U000DA8B6)
                 (else 9)))
               (#\U00084796
                (cond
                 (#t #f)
                 (8 #\衵)
                 (#\U00013BCD #t)
                 (#\ࢤ #f)
                 (#f #t)
                 (#f #f)
                 (#f #t)
                 (else 3)))
               (#f (if #t 3 #f))
               ((if 3 #\U000EF43C -16) 2)
               (#f #t)
               (#\u193D (cond (-3 #t) (#\U0009977F #f) (-4 -1) (else #t)))
               ((if #\U00061A98 #f -4) (abs #f))
               ((if #t #f #f) (integer? #f))
               ((char? #f) -5)
               (#t (cond (#t #f) (else #\㰖)))
               (#\瑑 #f)
               ((zero? -2) #t)
               (#f (char? #t))
               (-2 (cond (#t #t) (else #\U000A88B6)))
               ((cond (#\ṑ #t) (else #t)) (if -4 #\U0008F2DE -1))
               (else (cond (4 #f) (else #t)))))
             #f)
            (#t #t)
            ((cond
              ((cond
                (-2 #\턫)
                (#f (char? #\uA7B7))
                (#\U0005041D #f)
                (#\¹ #\繌)
                (#\윧 10)
                (else -3))
               #t)
              (#\鷸
               (boolean?
                (cond
                 (#t 3)
                 (#\U000A0AE7 #t)
                 (#t #f)
                 (#t -21)
                 (#t #t)
                 (#t #f)
                 (else #f))))
              (else #f))
             (cond
              (32 #t)
              ((abs #f) (if -3 #\㏟ (char? #f)))
              ((if (cond (#\뚙 #t) (else #\U000F0326)) #\U0007025B #\늵) -3)
              (#\uA97D (char? (if -1 #t #f)))
              (else #f)))
            (#f -3)
            ((if (if (cond (else #\ྏ)) (if #f -2 #\ᄚ) (integer? #\鹥))
               (char? (integer? 2))
               #t)
             #\졭)
            (else
             (cond
              ((cond
                (#f (if 5 -2 #t))
                ((cond (#f #\U000AE2C1) (#t #\뷁) (else 2)) (integer? -2))
                ((if #f -2 #f)
                 (cond (#f #f) (#t #f) (#\㊍ #f) (2 -1) (else -16)))
                ((char? 5) (integer->char #t))
                ((if 3 #\엾 1) (char->integer #f))
                (#f -11)
                ((cond
                  (#f #f)
                  (#t #\뵨)
                  (#\ਟ #\U000E6512)
                  (-2 -1)
                  (#\⾦ #f)
                  (#f #t)
                  (1 -1)
                  (else #\엠))
                 #f)
                (else #t))
               (integer->char -2))
              (#f #f)
              (else #f))))))
      #t))
   (#t #f)
   (else (cond (-3 -5) ((if #f #t #\U000437D0) (if #f #f -1)) (else #t))))
  (zero? 2))
 (#f (let ((h1 (let ((b0 (cond (#\U0005ADD8 0) (else #t)))) #t))) #t))
 ((cond
   ((sub1 (sub1 (if #\꤇ #f #t)))
    (cond
     (#t #f)
     ((if (char->integer #\U00082C28)
        (cond
         (0 #f)
         (#\ꈧ #f)
         (#t #t)
         (#\坃 0)
         (-5 #f)
         (#f 0)
         (2 -1)
         (#t #f)
         (else #t))
        -17)
      (sub1 (integer->char #t)))
     (#f #t)
     ((sub1 (cond (#\䌰 2) (-6 -4) (#f #t) (else #t)))
      (if #\喌 (cond (#f #\簞) (#t #t) (else #t)) -2))
     (else (if (abs #f) #f #\ࠉ))))
   (else (zero? (boolean? #f))))
  #t)
 ((let ((i0
         (zero?
          (let ((d1
                 (if (cond
                      ((cond (#\崈 #\즪) (else (char? #\쳲)))
                       (boolean? (integer? -129)))
                      (else -4))
                   1
                   #f)))
            #f))))
    (sub1 (let ((l1 i0)) l1)))
  #f)
 (#f -2)
 (#t (let ((c2 -5)) #t))
 (else (integer? -4)))
