#lang racket
(cond
 ((if #t
    #\U00036F79
    (cond
     ((integer->char #\U0004EAD9) #\ᇪ)
     (#t #f)
     ((if #t (cond (else #f)) #t)
      (cond
       (-2 (if #\뮱 (if 1 #\⠗ #\u0BAB) #f))
       (#f #f)
       (#t #t)
       (1 #t)
       (2 #f)
       (-2 #f)
       (5 #f)
       (9 (if #t #\U00081237 #f))
       (#t #\㽬)
       (#t -9)
       (else #t)))
     (#f (cond (-2 #\ꕔ) (else -2)))
     ((let ((k0 #t)) 4) (integer? #f))
     (#f (let ((c2 #f)) #f))
     (#t (let ((q0 #t)) #\硟))
     ((cond (else -2)) (let ((v2 #\䐱)) #\U000FE34E))
     (-4 -4)
     ((if #\U0006D344 #f -1) #f)
     ((add1 4) -4)
     ((cond
       ((integer->char #f)
        (cond
         (#\U0002C896 #f)
         ((if #\醋 #f #t) (sub1 (if 2 #f #f)))
         ((if #f #\U000D1188 (zero? #t)) #f)
         (#t (cond (else (if #t -4 #\ꖛ))))
         (#\U000DC2D4 #f)
         ((if #f #t #\U00048035) #f)
         (else #t)))
       ((- (integer? (if #t #t #f))) #\㮊)
       (#t -3)
       (1
        (if (cond
             ((zero? #f) #t)
             (-1 (if #t #t #t))
             (0 (if #\璤 #\맨 #t))
             (else (integer? #\U000A2837)))
          (cond
           ((integer? -4) #\u1ADE)
           (#t (cond (else 3)))
           ((cond
             (#t #t)
             (-2 #t)
             (4 #\꺆)
             (#t 7)
             (#t #t)
             (#t #f)
             (#\U #\쏃)
             (#\U0008AFF2 #f)
             (#f #t)
             (1 #\U00078682)
             (#t #t)
             (7 #\槐)
             (else 2))
            (if #t #\U000A468E #f))
           ((cond
             (4 #f)
             (-2 #\䏒)
             (#t #f)
             (#\U0003C41B #t)
             (#\츊 #t)
             (#f #f)
             (#\넔 #t)
             (#f #f)
             (#t #\㪃)
             (-6 -1)
             (#t #f)
             (#\ꐏ 2)
             (#t #\믩)
             (else #t))
            (cond
             (-2 1)
             (#f -8)
             (#f #t)
             (#f #\U0009F227)
             (#\㸵 #f)
             (#f #\U00051603)
             (-1 #\嗆)
             (1 #t)
             (#t #t)
             (else #\u2C2F)))
           (else (cond (#t #t) (2 5) (else -1))))
          (cond
           (#\劬 (sub1 #f))
           ((zero? -2) #f)
           (#f (if #f 2 #t))
           ((cond (#f -1) (#t #\喩) (-2 #f) (#f #f) (else #\汕)) #\税)
           ((integer? #t) #f)
           ((- #\퐸) 2)
           (#f (if #t #f 9))
           ((if #f 2 #\⏤) (sub1 2))
           (else #\ְ))))
       (else (if #\穊 (if (zero? 8) (if #f #f #t) (if #f #t #\屝)) 1)))
      #t)
     ((if #\膅 #t #\뢨) 11)
     (-2 #t)
     (else (abs #f))))
  #t)
 (#\U000BC7A3 #t)
 ((cond
   (#\U00040D72 #f)
   ((integer? #\U000D370B) #f)
   ((cond
     (#\璂 (sub1 13))
     (#t (if #f -2 #f))
     (#t (if #f #t #\嘥))
     (-1 (integer? (char->integer #\䫯)))
     ((if #f #t #f) (if (cond (else #t)) 16 -6))
     (6 (if #\U000D9601 #t (char? #t)))
     (#\釙 3)
     ((if -65 #f #t)
      (cond
       (#f #t)
       (#\U000B4548
        (sub1
         (cond
          (else
           (cond
            ((cond (else #\U00046E84)) #t)
            (#\窳 -1)
            ((cond
              (#f #f)
              (#t #\咉)
              (#\𠿑 #f)
              (1 #t)
              (-4 #f)
              (#\U0001E70C #t)
              (0 #t)
              (else #\U00068478))
             (if #f -2 -9))
            ((- #f) 6)
            (#f #f)
            ((cond (#\U000E60E8 #t) (#t #t) (#\ꍱ #\U000536BD) (else 3)) #f)
            (else #\얰))))))
       (1
        (boolean?
         (cond
          ((cond (0 #f) (#\䐙 #f) ((char? #t) #t) (else (if #\U000C2F0A #t #t)))
           #f)
          ((integer? (if #t #\U000E0C0A #\霈)) #f)
          (#f
           (if (if #f -32 #f)
             (cond
              (#f -2)
              (#t #\ꈨ)
              (#t 1)
              (#\U000B79AA #t)
              (#\ꉌ #\U0005B9B9)
              (-3 #t)
              (#\䬙 #\U0004534A)
              (3 #\歼)
              (-2 #\䰞)
              (#\젏 5)
              (#\U0007625B #\繃)
              (#t #t)
              (#\U0009E957 #f)
              (#\U0001E1BE #\癭)
              (#\U0006A9E1 #t)
              (#f #t)
              (#t #\袯)
              (#t -2)
              (#f #t)
              (else #t))
             #f))
          (#\땩 (abs -1))
          ((cond (else #f))
           (boolean?
            (cond
             (#t #t)
             (#\U00050533 -8)
             (#t #t)
             (#\U0006D82C #t)
             (#f #f)
             (#f #\莫)
             (#t #t)
             (#f #f)
             (2 #f)
             (#f #\䱅)
             (#f #t)
             (#\赻 #\U0001DFC2)
             (11 #f)
             (2 #t)
             (else -3))))
          (#f
           (if 2
             (cond
              (#t #f)
              (#f #t)
              (#t #f)
              (#\譿 #\U000E63E5)
              (#f #f)
              (#f #\u05F6)
              (#\U0008271D -6)
              (#f #f)
              (2 #f)
              (#f 4)
              (-4 #\릵)
              (#f #t)
              (-7 #t)
              (#f #f)
              (1 #\U000904E7)
              (#t #t)
              (#f -3)
              (#t #f)
              (#f #f)
              (#t #f)
              (else #\U00015695))
             #\U00011D2E))
          ((if #t #t (if #t #f #t)) #\U000E9C43)
          (#t #t)
          (else #\U0001743C))))
       (else 10)))
     ((if #\𡎍 #\陵 #f) (let ((d1 #t)) #f))
     ((if #f #\鑯 #t) #f)
     (else
      (if (if (cond
               (#t #\졻)
               ((if -5 4 4)
                (cond
                 (-1 #f)
                 (#t #t)
                 (#\U000378A6 #t)
                 (#\荼 #\U0008F097)
                 (#f #t)
                 (else #\U000386C4)))
               (else #f))
            #f
            (cond
             (#f 2)
             ((if #f 3 #t) (if #f #\U0003A029 #f))
             ((if -1 #\U000B5DFB #\U00076731) (if -2 #f 4))
             (-4 #f)
             (#\U00054A46 (if #f #t -64))
             (#f #\˕)
             ((if #t #\U000ACA91 #t) (add1 #f))
             (#t (if #f #t #\坁))
             ((if -3 #\히 #t) #t)
             (-3 #f)
             ((abs #f) #f)
             ((if #\𤻧 #t #t) #t)
             (#f (- #t))
             (#\U000E12E9 #\U000D8977)
             (#f (char? #t))
             (else #\ଇ)))
        #\U000ABA4D
        #f)))
    #f)
   ((let ((x0
           (cond
            (2 #f)
            (#f 3)
            (#t 2)
            (#\U00057FA8 #\𦲾)
            (#f 2)
            (-3 #f)
            (else 3))))
      (cond (else #\U00032E2C)))
    (cond (else #\u0E7E)))
   (#t #t)
   ((let ((f1 #f)) 2) #f)
   (#t (boolean? (let ((v2 #t)) #f)))
   ((cond
     ((cond
       (#\崘 #\揦)
       (#f -33)
       ((if (zero? #t) #f #t) #t)
       ((if #\U00097783 (boolean? #\U000AF68F) -4) #f)
       (else #f))
      #\U00043783)
     ((integer?
       (cond
        ((abs
          (cond
           (#t #\旖)
           (#f #f)
           (#\U00068ED8 -2)
           (0 -5)
           (0 #\U00051991)
           (#t #\ዿ)
           (-2 #f)
           (else -3)))
         (if (cond (else #t)) #f #f))
        ((sub1 #\U0004E979)
         (cond (2 (if #t -3 #f)) (#\𨈇 (if #f #\㼱 #f)) (1 -4) (else -2)))
        (#\U000FC7D3
         (cond
          ((if #f -2 #t) (if #t #f #t))
          ((- 4) (- #f))
          (#\鏡 #t)
          (#\꣖ #f)
          (#f 9)
          (#f (if 32 #f #f))
          (else #f)))
        (-2 (if #\U0005F3EA #f 2))
        (1 -3)
        (else #f)))
      4)
     (#\U0009C8F0 (- 0))
     ((let ((l1 #t)) -4) #f)
     ((cond (#\猢 #t) (1 #\ʗ) (#f #\U000B1075) (6 #f) (6 #f) (else #\U00048E6E))
      #f)
     (#\U00046CC8 5)
     (#f
      (cond
       (#\㡣 #\U000D5F2B)
       (#f (char? #f))
       (#t #f)
       (#t #t)
       (#f (integer->char -4))
       (else #\U000C5969)))
     (#t (if 2 #f #t))
     (#\U0009053F #\蹚)
     ((integer->char #f) (let ((m1 -4)) #t))
     (#t #t)
     ((add1 #\畯) 2)
     ((add1 #\ᇥ) #f)
     (0 #f)
     (else (if #\U000EF296 #\U0006BD5A #\U00061749)))
    (if #\绳 (let ((x1 #\湏)) 2) 2))
   (else (cond (-1 #\U0007F0E1) (else 2))))
  (let ((j1 #t))
    (cond
     (#\U000382E6 (char? #\Ὲ))
     ((let ((t2 j1)) #\U000C79FC) (if -32 #f 1))
     ((cond (2 #\U0003BD4C) (#\筎 j1) (j1 -2) (j1 #\蜌) (9 2) (else j1))
      (cond (else j1)))
     (j1 6)
     (#t 2)
     (else (if #t j1 #t)))))
 (#f -16)
 ((if #t #t (let ((n1 (char->integer #\嶌))) 7)) #\䰝)
 (#\U00056753 -4)
 ((cond
   ((integer?
     (cond
      (#t
       (cond
        ((cond
          (#t (if #\廳 #f #t))
          ((if #f #\沭 #t) (cond (#f #f) (else #f)))
          ((integer? #\U00031852) #\᭘)
          ((cond (#t #f) (-2 1) (else #f)) (if -3 #f #t))
          (else -1))
         (if -3 (if #t #\兂 #\È) (if #\Չ #t #\礋)))
        (#t (if (if #\U000A4461 -16 #f) #\谽 #\륤))
        (else
         (cond
          ((zero? -3) #t)
          ((cond
            (#\旸 #\瞐)
            (#f #f)
            (0 #t)
            (#\継 #t)
            (-9 #t)
            (#f 8)
            (#f #f)
            (#t #t)
            (128 -4)
            (#\쬕 #f)
            (11 1)
            (#t #t)
            (#f #t)
            (#f #f)
            (#\U000CF024 #f)
            (#t 1)
            (else #\だ))
           (cond
            (#f 1)
            (#t -4)
            (#t 256)
            (6 #\迾)
            (-4 #\⅛)
            (#\秫 -1)
            (7 #f)
            (#\U00057E3C -2)
            (#\U000EBEA1 #f)
            (#f #\U0007B818)
            (#f #\飗)
            (2 0)
            (else #f)))
          (-4 #\U000F53D0)
          ((cond
            (#\U00075C60 #\U000F52F2)
            (#\U000CFA57 -2)
            (#\U00044F58 #t)
            (-1 2)
            (#\Ρ #\ⅵ)
            (#f #f)
            (#\U0003DFFB 0)
            (else -6))
           -4)
          (0 #t)
          (#t #f)
          (#f -32)
          (else 8)))))
      (#\滟
       (cond
        (#f #\U000D0C3E)
        (-2 (integer? (if #t #\ᐼ -2)))
        (#t #f)
        (#\U00074536 (if #f #t #t))
        ((cond (5 (if -2 #\U000AC173 #f)) (else #t)) #t)
        (#t #f)
        (#f #t)
        ((if #\禯 #f -2) (if 3 -2 (add1 #\U00013E62)))
        (#\U000F4F32 (boolean? (if #f -4 #f)))
        (else #\ᐂ)))
      ((if #f 1 3)
       (cond
        (else
         (zero?
          (cond
           (#t #f)
           (#\U000300AA #f)
           (#f 1)
           (#\U000D008B #\U000181CA)
           (3 #\䡃)
           (#\U0008769C #t)
           (else #\U0008E394))))))
      ((cond
        ((integer? (sub1 #\U000B0A19))
         (if (if #\U00105DA4 #\U000AECC8 #\㖕)
           #\u0CF3
           (cond (#f -4) (4 #\U000620E9) (else 8))))
        (#f
         (cond
          ((sub1 #\尥) #t)
          ((cond (#\U000E704B #f) (#t #f) (5 #f) (#f #\흢) (else #t)) #f)
          ((zero? 2) (if #\碂 #f 10))
          ((integer->char #f) 1)
          (-17
           (cond
            (#\岻 #f)
            (0 #t)
            (#\䂤 #t)
            (#t #\𪓼)
            (#\U0008A613 #t)
            (#t #t)
            (#t #t)
            (#\揗 #\u1CBC)
            (#\ꛔ #\U0007F9ED)
            (#f -5)
            (-2 #\荤)
            (#\U000B181F 2)
            (#\罔 #t)
            (6 #t)
            (else #\墤)))
          ((cond (#t 3) (#t #f) (#t -8) (-3 #\U0002BF02) (#t #t) (else #\軱))
           #\迶)
          (else (if #f #\ͯ #\ᷲ))))
        (else (if (if #t #f 1) (boolean? #t) #\谲)))
       #f)
      ((if #\鶷
         #t
         (cond
          (#f
           (cond
            (#t -1)
            (#t #t)
            (#\U000A885E #f)
            (#\䒱 #f)
            (#t #t)
            (#t #t)
            (#t #\U001001B1)
            (#t #\ƴ)
            (0 -5)
            (else #\U00043ADD)))
          ((if #t -1 #t) #\樣)
          (#f (if #t #\U00092620 #f))
          ((if #\웑 #f #\橳) (if #f #t -5))
          (#f -9)
          (#f (if 16 1 #f))
          (#\uE1E2 (if #f #t -1))
          ((if #\U000A9D96 #f #f)
           (cond
            (#\uE220 #f)
            (#\ꚨ 4)
            (#f #f)
            (-2 #\U000641EF)
            (-1 #t)
            (#f -17)
            (#\U00059624 #t)
            (#f 2)
            (else -1)))
          (else #f)))
       #\U000AA715)
      ((if (if #t
             (cond
              (-32 #\U000FE9D3)
              (#\뷓 #t)
              (#f #f)
              (#\璬 -1)
              (4 #\诗)
              (else #\U00051613))
             #t)
         #t
         #\U00070549)
       (integer->char (cond (#\U0004D219 (add1 #t)) (else #\U00089EEB))))
      (6 (integer? (sub1 (if -1 #f 5))))
      ((if 1 (add1 #t) #t)
       (cond
        (#f 1)
        ((if (cond
              (-1 #\U000972CD)
              (#t -6)
              (-7 #\U0002D848)
              (#\U001088F6 #\큫)
              (#\𫟒 #f)
              (#\䩓 #t)
              (#f -4)
              (else #t))
           (cond (#t #f) (#f -3) (else #f))
           9)
         #\㛒)
        (else #t)))
      ((cond
        (#f #f)
        ((if #\U000D8EE7 #\U000F37C0 #\U000B3F51) #\U000E4B1C)
        ((zero? #\U000843D4) (zero? (cond (-4 #f) (else #t))))
        (#\抴 #\U00096D0C)
        (else #f))
       #t)
      (#t #f)
      ((if (if #t (if #\U000162A6 #f #f) (if #t #\𢼺 #t))
         (if (sub1 #f) #f (if #t #t #t))
         4)
       (integer? #t))
      (else #t)))
    2)
   ((cond
     ((cond
       (#\U000E4D44
        (cond
         ((if 1 4 -1) 3)
         (-2
          (integer->char
           (if (cond (#\惣 #t) (2 #t) (else 8))
             1
             (cond (#t #f) (#f #\U0005898C) (else #\괰)))))
         (3
          (cond
           ((cond (else #t)) #\荝)
           ((if (if #t #\U000DB440 #t) #f #\䓽) #t)
           ((if #\ဣ #t (cond (#t #f) (#t 4) (#f #t) (else #t))) #t)
           ((cond
             ((if #f -2 #t) #f)
             (-2 (cond (#\㵷 #t) (#t -7) (5 #f) (else -1)))
             ((boolean? -5) (if 4 #f #\籭))
             (-1 (if #\U0003ED81 #f #\궎))
             (#f
              (cond
               (#t #\U00103B0A)
               (#\U00052954 #t)
               (#f -4)
               (1 #\U0001EBCE)
               (#\䠔 #\U000DB4FE)
               (#f 5)
               (#f #f)
               (#t #t)
               (9 #f)
               (-1 #\U0009F491)
               (#f #f)
               (else -6)))
             ((sub1 #\鈟) (cond (else 1)))
             ((zero? #\U000B0462) (if 0 #\U00073A32 #t))
             (else #f))
            #f)
           (#f #\U0007136B)
           (else (sub1 #\U000BCE14))))
         (#f -5)
         (#\U000DEDC5
          (if 2
            (cond
             (#\U000E1FB8 #\䂇)
             (-11 (if #t #\岅 #\U000B14A3))
             (2 (integer->char 6))
             ((integer? #f) (if #t 1 #t))
             (#f #\U00039A67)
             (#f (if #f -4 -1))
             (#t (integer->char #f))
             ((zero? 1) (cond (else #f)))
             (#\U000E38F9 (integer? #\䷕))
             ((zero? #\甁) (char? #t))
             ((cond (#f #f) (else #f)) #\U000C1B8A)
             (#t #\U0006E85E)
             (#f 4)
             (#t
              (cond
               (-4 -1)
               (-3 -4)
               (#t #\핋)
               (-2 #t)
               (#\U0005C268 2)
               (else #f)))
             ((boolean? #t) #\U000D2CFC)
             ((char? #\U000820BB) #t)
             ((cond
               (0 #t)
               (#f -1)
               (#\闪 #t)
               (1 #\U000BB827)
               (-4 #t)
               (#f #f)
               (#f #\恽)
               (#\U0005E733 #f)
               (else #f))
              #f)
             ((- #f) #t)
             (#f #f)
             ((if #f #t 16)
              (cond
               (#t #t)
               (#t #\堕)
               (1 #t)
               (#\U000E3C18 1)
               (#\U000A99E4 #\U0008209F)
               (else #f)))
             (#\犿 (if #f #\U000A1F7F #\U0002BE09))
             (#\Ą #t)
             (#\졁 (if -1 -1 #f))
             (#t #\𣦭)
             ((cond (#t -32) (-2 4) (#\U000D4FB8 #\䑚) (else #f)) -8)
             (-9 1)
             (else -2))
            #\U00031DD2))
         (#\U0006E753 #\uF6AC)
         (2 #f)
         (else
          (if (cond (#f (abs #f)) (#t #t) (#f #\鸍) (else (integer? #t)))
            (if (if 1 #\⺳ #f) -1 #t)
            #f))))
       (3 #\씭)
       (#f #\Ꚙ)
       (else #\U0007FA31))
      (let ((r0 #f)) #t))
     ((cond
       (4 #f)
       (1 #\U00030C89)
       (17 #\U000AF746)
       (#t
        (cond
         ((cond (else #\U0008D8C7)) #\U0001C92C)
         ((add1 (cond (else (abs 10))))
          (cond
           ((if 2 (integer? 1) #\U0007758C)
            (if (cond (#\ᒐ #f) (else #f)) (if #f #\ᤦ #\╗) #\U0009D500))
           (#\∌ (integer? (char->integer #f)))
           (2 #t)
           (else (if 2 #t #t))))
         (#\䛦 (if -4 (cond (21 4) (else #t)) (add1 (char? #t))))
         ((if #t
            #f
            (cond
             ((zero? #t) #f)
             ((cond (else #t)) #f)
             (#\U0009D6DF #f)
             ((cond
               (#\铈 #\U000F8C33)
               (#t #f)
               (#f #t)
               (#\➜ #t)
               (4 #f)
               (5 #\uE1FC)
               (#f #t)
               (#f #t)
               (else #t))
              #f)
             (#\䌼 (if #t #f #t))
             (#\U000D7088 #f)
             (4 (char? #t))
             (else (- #t))))
          (- (add1 #f)))
         ((cond (-5 #t) (else #t)) -5)
         (#\竭 #t)
         ((add1 #f) #\U00057AF7)
         ((zero? #f) 0)
         (else #f)))
       (#t #t)
       (else -4))
      (if (if (sub1 #t)
            (cond
             (#\搞 #f)
             (#t
              (if #t
                (cond
                 (#\䢵 #\U000A2541)
                 (#\臝 -2)
                 (#\𨾥 #f)
                 (#\U000EFDE6 #f)
                 (#t -4)
                 (2 #f)
                 (#f #t)
                 (#t 1)
                 (#t #f)
                 (else #f))
                6))
             (1 (if #t (if 0 #f #f) #\顕))
             (else 3))
            (if (abs 10) (if #f #t #f) (boolean? #f)))
        #t
        #f))
     (3 (integer? #f))
     (#f #\㤱)
     ((zero? #\硳) #t)
     (1 (if (if #\罝 #f #f) #\U0009314D -10))
     ((if #\U0003DEEF (if #t 4 #\舚) (- #t)) 2)
     ((integer? #f) #\U000598E1)
     (#f 2)
     ((if #f #f #\鋿) (let ((c1 #\U000EC2C4)) #f))
     (else (zero? 3)))
    (integer? 4))
   (#f #f)
   ((let ((a1 (let ((v2 #f)) #f))) (cond (else #f)))
    (if #t
      (cond
       (0 2)
       (#\ᾍ (cond (else #\హ)))
       (#\U000DB309 2)
       (#f (char->integer #f))
       (#\U000CAE7D #t)
       (2 #\⎑)
       (2 3)
       (#f #\ꔳ)
       (-4 -3)
       (16 4)
       ((char->integer #f) #\𨦣)
       (#t 4)
       (#\U0003041D #f)
       (1 #t)
       (-17 -4)
       (#\⩞ #t)
       (#t #\U00054A28)
       (1 #f)
       (#t -2)
       (#f #\戇)
       (#\淞 #\ᄰ)
       (#f (if -5 #f #f))
       ((boolean?
         (cond
          ((if (char->integer #t) (- #t) #f) (abs #t))
          (#t
           (cond
            (2 #t)
            (#\甡 #\U0008E1B3)
            ((if #\U000DE8EA #\uEB4C #t) #t)
            (else (cond (#\U00096740 #\U000AF394) (else #\U000FD653)))))
          ((char->integer #f) #\U000D8A70)
          ((cond
            (#\讇
             (cond
              (4 #t)
              (#t #f)
              (#f #\U00100F5F)
              (#t #f)
              (0 0)
              (#f #f)
              (else #t)))
            (else #t))
           #f)
          (else #\U000ECA3C)))
        #t)
       (#f #t)
       (#t #\ᤉ)
       (#\U000D672C #f)
       (#f 0)
       (else #t))
      #f))
   (#t -2)
   (else
    (char?
     (integer->char
      (cond
       ((cond
         (#t (if 2 #\ꑀ #f))
         ((cond
           (#f (cond (#\U0008EAB0 #t) (-2 #f) (#\沔 #t) (else #\ꇉ)))
           (#\U00073D4F (cond (else #\U000AAF9A)))
           (#t (if #f #f #f))
           ((integer->char 5) #\맍)
           ((cond
             (#\쑊 #t)
             (#\U000EB6B3 1)
             (#f -2)
             (#\U001019A4 #\浫)
             (#f #t)
             (4 #f)
             (#f #\▛)
             (-3 #\뵽)
             (#t 2)
             (#t #f)
             (else 8))
            #t)
           (else (cond (#t #t) (#\U00054E42 -5) (#f #f) (#t #f) (else #\讈))))
          (cond
           (#\U000D17B4 #t)
           ((cond (#f #f) (else #t)) (if #t #\㨃 #f))
           ((cond
             (0 -3)
             (#t 0)
             (-1 #f)
             (#\U000EB384 #f)
             (#\U000731C1 #t)
             (else #\䱟))
            (cond
             (#f #t)
             (#t 8)
             (#t #\න)
             (#t #\U000AC414)
             (#t #\U000A0BC4)
             (#f #t)
             (2 #\U00083154)
             (#t #t)
             (-4 #\╽)
             (-1 #\U00072882)
             (0 #t)
             (#f -1)
             (#t #t)
             (#f #\U000EA472)
             (else -4)))
           ((cond
             (#\ȹ #f)
             (#\U0005EDC6 #\傱)
             (-2 -3)
             (#t #\눆)
             (-4 #\䪘)
             (#t #f)
             (else #f))
            #f)
           ((cond (-2 #f) (3 #t) (4 1) (2 #\U0010C8E8) (#t #f) (else #t))
            (cond
             (#t 0)
             (#\큝 #t)
             (#t -1)
             (#f #t)
             (#\U00065AF4 #f)
             (#f #t)
             (#t #f)
             (3 #t)
             (#t 2)
             (else #t)))
           (#\U0002F307 (if #\ᶢ #\췥 1))
           (#f -3)
           (else #f)))
         (#f (add1 -4))
         (-2 -3)
         (#\疏 -1)
         (#t (integer->char #f))
         (-4 (abs #f))
         (#f (- (cond (-3 -1) (2 #f) (-6 #\飂) (-3 #f) (#\㎻ #t) (else -1))))
         (#\U0003834A (cond (else (zero? #t))))
         (#f (if #t #\〉 #f))
         ((if -1
            (abs -2)
            (cond (#\辭 -3) (#f 1) (#t #t) (-7 -1) (#t #f) (#\𝕰 #t) (else #t)))
          #f)
         (#f (if #f #\U000CBF54 #\U0009C393))
         ((if (if #\ꦪ #\ⴃ #t) (if #f -2 #t) 34) (integer->char -5))
         (0 #t)
         (#\U000AAB85 -3)
         (#t (if 2 (if #t 6 #f) -2))
         ((integer? #f)
          (cond
           ((cond (#\䥨 #\岪) (#t #\U000EE17E) (#f #t) (#\흴 #\㩜) (else #f)) #t)
           ((cond (else #\婈)) (if #f #\䓯 #\U000E67F4))
           ((if #f -16 #t) #t)
           (-3 #t)
           (#\U00012F43 (char->integer #f))
           (#f #\┳)
           (else 1)))
         ((cond
           ((cond
             (#t #t)
             (#t #t)
             (#f 4)
             (#t 1)
             (3 #\U000C5D7F)
             (1 2)
             (#t #t)
             (#f #\U0009357C)
             (#t #t)
             (#f #\u31BD)
             (else #\蘚))
            1)
           (else #t))
          4)
         ((zero? #t) #t)
         (#f #t)
         ((if #\U000D5763 #f 1) 2)
         (#t #f)
         (else 2))
        (cond
         (#f (if #t #\U0009398B (if #\U000B9276 #t #\U000CCF87)))
         (#t 2)
         (#f #f)
         ((add1 #\𐐖) #\ฏ)
         (#t #f)
         ((integer? (zero? #f))
          (if #f #\U00076089 (cond (#\鎜 -4) (4 #t) (else #f))))
         ((boolean? #t) -2)
         (else #\U00098892)))
       ((zero? #\𣞱) #\U000D26F9)
       (#\ᛣ 0)
       (-2 #\쉦)
       (#f (if #f #t 2))
       ((if #f
          (if 3 (cond (#f #f) (#f 2) (#t #t) (#f #t) (4 2) (else #t)) #f)
          2)
        (cond
         (#t
          (cond
           ((abs #f) #\U0007B5A6)
           (#\U000C71D6 (cond (-1 #\߭) (#f -1) (else -5)))
           (#\눥 (cond (-2 #t) (#t #f) (else #\鞞)))
           ((cond
             (#\㞪 #t)
             (0 #f)
             (-8 #f)
             (-2 #\ῦ)
             (-4 #\U000541F3)
             (#\ᠣ #f)
             (#f #\U00087E74)
             (-36 #t)
             (#f -9)
             (-2 #f)
             (#f 2)
             (16 #t)
             (else 9))
            128)
           (#\궙 (cond (else #f)))
           (#f (cond (else #t)))
           (else -2)))
         ((if (abs #t) #t #t) #t)
         ((cond (0 -6) (-3 -1) ((zero? #\U00069E9E) (integer? #f)) (else 4))
          #f)
         (#\U000FF2AC #\堥)
         ((cond ((if -1 #f #t) 3) (else (cond (#f -5) (else 1))))
          (cond ((abs 2) 2) (else (- #t))))
         ((if (if #t #\ꖾ #f)
            (cond
             (#t -33)
             (#f #f)
             (#t #\U00060FF3)
             (#\U0002D750 1)
             (-5 #t)
             (#\U00047103 #t)
             (#t #f)
             (#f 3)
             (#f #\U000A63CB)
             (1 #\U00105AC9)
             (else #\U000E1B4E))
            #\U000F6095)
          (sub1 #f))
         ((if (if #t 17 #f) #f (char? -4)) #f)
         ((cond
           (-2 (if -3 #t 7))
           (#t (cond (#t #t) (#t -2) (#t #t) (else #f)))
           (else 1))
          (cond
           (-1
            (cond (#t #f) (1 #f) (#\ᑳ #f) (#f #t) (4 #f) (#t #\뱗) (else #\恉)))
           (-2 #f)
           (else (integer->char 0))))
         (#\U000B9CEE (cond (else (if #\U0009801C #\푘 #t))))
         (8 #t)
         (else #t)))
       (-2 (boolean? -1))
       (else #\U000C63A4))))))
  (let ((i0
         (cond
          ((char->integer #t) (cond (-1 #t) (else #\U000E177A)))
          ((if #f #f #f) 3)
          ((let ((h2 2)) 1) #f)
          (else #\U000DBF85))))
    #f))
 ((char?
   (cond
    ((if #\㚊 -34 4) (if #t -1 #\䐌))
    (#\𤱩 #\⪆)
    ((if #t 9 #f) #t)
    (4 (let ((y0 1)) y0))
    ((cond
      (#t
       (if #t
         -5
         (zero?
          (cond
           (-2 (if -4 #f 2))
           (#f 8)
           (#t (if #f #t #f))
           (#\U000DAD62 -2)
           ((add1 #t) #\U000A30EB)
           (else (cond (#f 4) (else #t)))))))
      (4 #t)
      ((cond (else -2)) #f)
      (#t 4)
      (-3 #t)
      (#\㠐 #t)
      (-2 #t)
      (#f #t)
      (else 4))
     1)
    ((if #t #t (char->integer #f)) (if #t #\U0004C160 #f))
    ((if #t #t -5) #\U000EFEE1)
    (else #f)))
  #t)
 ((let ((z0
         (char->integer
          (cond
           (-1 #t)
           (#t #f)
           (#\U00098C91 #f)
           (#\鷉 #t)
           (2 #\U000D2365)
           (66 #\胜)
           (#\斖 #f)
           (#f #t)
           (-13 #f)
           (else #t)))))
    (if (if #t #\중 #f) (zero? #t) #t))
  (char->integer (- 0)))
 (else #t))
