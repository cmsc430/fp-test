#lang racket
(cond
 ((cond
   ((cond
     (#f 4)
     (#t #t)
     ((cond
       (#\憻
        (cond
         ((integer? (cond (else (cond (else -3))))) #f)
         ((if #\U0008AB6A (sub1 (if #\ᇔ #f #f)) (- 2))
          (if #t
            (cond
             ((if #t 1 #\U0001C136) 1)
             ((char? #t) (integer? 0))
             (else #\ᵦ))
            (cond
             (#\䀬 (if #f #f #t))
             ((if -1 4 #\U0005DD8B) (cond (else #f)))
             (else
              (cond
               (#f 2)
               (#\썽 #t)
               (#f #f)
               (-3 2)
               (-4 0)
               (#\𩞺 #t)
               (#f #\U0004DDEA)
               (2 #\U0003DEC7)
               (#\쒌 #\U000B49C3)
               (else -1))))))
         ((if (cond (else #f)) (if #\程 #f #\U0009503F) #\U000738AB)
          (if (boolean? (zero? #\ꎦ)) #\缛 (- 2)))
         ((cond
           ((cond
             (else (cond (#f -3) (#f -2) (#f 1) (#t -9) (-2 #t) (else 11))))
            (zero? #f))
           ((cond
             (#\橑 (cond (#\U000B30B6 #\U000FD0A4) (else #\鄭)))
             ((if #f #t #f) (if 1 #t #\𫍲))
             (else #f))
            #t)
           (-2 #t)
           ((cond (#t -1) (-3 #f) (else (if -1 #\稠 #f)))
            (char->integer (cond (1 #f) (#t #t) (else #f))))
           ((if (cond (#f #f) (#\羷 17) (else 4)) #f (if #f 3 #t))
            (- (cond (else #f))))
           (else #t))
          -2)
         (-9 #t)
         ((if (cond (#\𐫙 (if -4 #t #f)) (else #t)) #\𝚅 #f) -42)
         (#f (if #f #\戂 (cond (else (cond (#\U000517F3 #f) (else #f))))))
         (#\U000E0E97 (- (if (boolean? #t) -2 #f)))
         (else #\렴)))
       (#f #f)
       (-1
        (cond
         ((if (zero? #f)
            (if #t
              (cond
               (#f #\U0009DE17)
               (#\憲 0)
               (4 #\U00016061)
               (else #\U00034AA0))
              #t)
            #t)
          6)
         (1 (integer? #f))
         ((if (boolean? #t) -2 #f)
          (cond
           (#f -1)
           (-2
            (if #f
              (cond
               (#f 9)
               (#f -68)
               (#t 4)
               (#\ᘛ #t)
               (#t #t)
               (#t #f)
               (#t #\癏)
               (#t #t)
               (#t #f)
               (#f #t)
               (#f #\U0006FA75)
               (#f #f)
               (#f #f)
               (#\U001050CB 6)
               (else #f))
              (cond
               (#t -1)
               (#\U000725D8 -7)
               (#\둓 #f)
               (#t #\U00084CA2)
               (#f #t)
               (3 #f)
               (4 #t)
               (#\U000E6F92 #\棷)
               (5 #f)
               (-2 -5)
               (2 #t)
               (#f 1)
               (#t #\U000DB960)
               (else #\U0004628D))))
           (#t (if #f (cond (else #t)) #t))
           (else 0)))
         ((boolean? (cond (2 -1) ((boolean? #f) -4) (3 #\U0003CEE5) (else -4)))
          (if #f (integer? #f) #\U000E332C))
         (-4 32)
         (#t (sub1 (add1 #\伿)))
         (else #\U00040BAD)))
       (#\䔿 #\맷)
       (else #f))
      (if #t #f #\䋧))
     ((cond
       ((if (cond (#f #\䠼) (else #\ᮤ))
          (if #f #t #f)
          (char->integer #\U000B870A))
        -8)
       (else (char? #t)))
      #\䌾)
     ((zero? #t) (if #t 2 #f))
     (#t (char->integer (sub1 #\桻)))
     (#t -34)
     ((if 9
        1
        (if (cond (else (boolean? (if #t #\꺺 -1))))
          #t
          (cond
           (3 #f)
           ((integer? #t) (cond (else #\궃)))
           (#\U0007BD08 (cond (else #f)))
           ((cond
             ((add1 #t) #\↣)
             ((zero? #\U000BB63E) (cond (#t #t) (#\쫑 #f) (#f 2) (else #\쀝)))
             (#\U00065028 (if #f -9 #\U000D51B4))
             ((if #\U0004D37A #f #f) -1)
             (else #t))
            (char->integer #t))
           (#\ᕨ (- (integer? #t)))
           (#f #t)
           (else #f))))
      (if (cond
           (#t #\፬)
           (-1 #f)
           ((cond
             (#\䃛 -3)
             (#\U000CEC2F (cond (5 #\잉) (else #f)))
             (0 #t)
             ((if #t #t -5)
              (cond
               (#t #t)
               (#\U000FF1CF 1)
               (3 #t)
               (-5 #\隡)
               (0 #\U000B9C02)
               (#\鳚 #f)
               (#f #\儜)
               (#f 2)
               (2 #f)
               (2 #\멧)
               (else -9)))
             ((integer->char #f) -1)
             (-9 (integer->char #f))
             (4 (cond (else #\U000E11D1)))
             ((if #t -2 #\U000CD975) (char? #f))
             (else 4))
            #f)
           (else #f))
        (if -2 #\䍿 #f)
        1))
     (else (add1 -17)))
    (boolean? #f))
   ((if #\䠤 (- #t) #t) (if #f -4 #\坻))
   (else #f))
  -2)
 (#f #\䢠)
 (2
  (cond
   (#f (if (if 3 #\U00067B3E #\U0001B714) (if -4 #\U000B5E31 #f) #t))
   ((char? #t)
    (cond
     (#t #\뙑)
     (#t (cond (#\䭨 #t) (else -2)))
     ((if #t 0 #\U000FA1A9) -1)
     (#\̝ #t)
     ((char->integer #t) 5)
     ((boolean? #t) (abs 6))
     (else #\U00036D5B)))
   ((if #f
      (integer->char
       (if (char->integer #t) -5 (cond (#\䯌 #\U000C64D3) (else -2))))
      4)
    (- #\U0008EC0B))
   ((if (if #t (char->integer #t) (sub1 #f))
      (if (boolean? #t) #\▜ #t)
      (cond
       ((- -10)
        (cond
         (else
          (cond
           (#\싦 #f)
           (#f #\U000E114C)
           (#t #\U00106139)
           (#\U000DA7E4 #t)
           (#t #t)
           (#f #t)
           (else #f)))))
       (#f #\U000198A3)
       (#t 5)
       ((sub1 #\魜) (zero? (cond (1 #\U00072758) (#\쩎 #\u12BF) (else 5))))
       (#\䒮 (zero? (char->integer #t)))
       ((zero? (if #\켷 #t -4)) #t)
       (else #f)))
    #t)
   ((cond (#\綎 #f) (#f (if (add1 #f) #f 3)) (else #f)) -8)
   (#\Ṛ (boolean? -1))
   (else #f)))
 ((cond
   (#\U000B673D #f)
   (#\U0001E2AA 7)
   (#t #t)
   ((zero? #t)
    (if (cond (else #t))
      (cond
       (#f #f)
       (#t (- #t))
       ((if #\U000E865A #t #t) #f)
       ((cond ((char? -1) #f) (#f -4) (else (cond (#t -3) (#t #f) (else -67))))
        129)
       (4 20)
       (#\㭾 #t)
       (#\U0001DCCA (sub1 #t))
       (#\壁 #f)
       (else #t))
      #t))
   (else 0))
  (cond (else (let ((b2 0)) (cond (#f #\U000B309C) (else b2))))))
 (#\팂 #t)
 (#\ᓅ -2)
 ((if (cond (#t (integer->char 0)) (else (cond (1 #\䈞) (else #f))))
    #\U0010E37C
    #f)
  1)
 ((add1 5) 0)
 ((char? #\𖡿) #\U000CAF5B)
 ((let ((l2
         (if #\᎓
           (cond
            ((cond
              ((if 4 (if #t #f -4) #t) #f)
              ((boolean? (if #\쁅 #\縗 #\U0009D2FA))
               (cond
                ((if #f #\U000CFDCD #t) (zero? #\U000774C2))
                (-1 #t)
                ((cond (#\톬 #f) (#t 1) (#f #\훪) (else #\䐄)) #t)
                (else #t)))
              (#f #t)
              ((cond (#f #\ƒ) ((cond (else #\헷)) #\u0098) (else #t))
               (zero? (if #t #\U000F347E -3)))
              (#f
               (cond
                (#f -2)
                ((if 5 #f #t) 3)
                ((sub1 #f) (char? #\⊉))
                (#f (add1 2))
                ((sub1 #\U000F0B97) 2)
                (1 1)
                (#\当 (cond (#\껾 #f) (else #\埁)))
                (else #f)))
              ((if #\U000C1694 #f (boolean? #\궳)) 3)
              ((integer? (if #\U0007CB95 1 2)) #t)
              (#f #f)
              (else (- (cond (2 #f) (#t #t) (else #\U001036B4)))))
             (cond (else (abs 2))))
            ((cond
              (#f (integer? (cond (#\U0008682A 2) (else #\U000637A1))))
              (3 #f)
              (else (add1 (cond (else #f)))))
             #t)
            (else #f))
           (if #t #f 8))))
    #t)
  #\uE023)
 (#t (let ((k1 #f)) 10))
 (#\궐 (cond (-1 -17) (else (sub1 #\U00067ED1))))
 ((if 5
    #f
    (cond
     ((cond (#f #t) (else #f)) (if #t #t #t))
     ((if (add1 #f) #\썁 #t) #t)
     ((let ((d1 #t)) #t) (if #\u1739 #f (abs -2)))
     ((cond
       (#t #t)
       ((if 5
          (integer->char (if #t #\訟 (cond (else #f))))
          (cond
           (#f #\㯺)
           (#t (integer? (integer? #\U000E49FD)))
           (#\U000FFCD3
            (cond
             (#\飬 #t)
             (-2 (add1 2))
             ((integer->char #t) (- #t))
             (#t (char->integer #f))
             (-2 #\Ĺ)
             ((abs #\䢨) #t)
             ((cond
               (#f 2)
               (-2 #f)
               (-1 #t)
               (#\ꈖ #t)
               (#t #t)
               (#f #t)
               (#f #f)
               (-3 #f)
               (#t #f)
               (else #t))
              #\䘾)
             (#t 0)
             ((sub1 0) #t)
             (else (boolean? #\睒))))
           (#t (integer->char #\U000E9DD9))
           (#\U0008FB15 #f)
           (#t #\ꃺ)
           (#f #\虧)
           (#f #\U00013BBA)
           ((char->integer #\U0002C6B1) (sub1 #t))
           (#f #t)
           (#\穆 #f)
           ((cond (else #f)) #t)
           (else (cond (-32 -2) (else (if #t #f 1))))))
        #t)
       (-32 #t)
       (else #f))
      #f)
     (else (sub1 (char->integer (if (integer? (- #f)) #\U0005B05E 17))))))
  (cond (#t -3) (else 6)))
 (5
  (let ((z0 (cond (#f (boolean? #\U00074FBD)) (else (integer->char #f)))))
    (integer? #f)))
 ((cond
   ((let ((v2 (let ((v1 #f)) #t))) v2)
    (cond
     (#t
      (cond
       (#t #\U001033E2)
       (#f -9)
       (-2 11)
       (#f -5)
       (#f #\U000162C5)
       (#\U0004C8E5
        (sub1
         (if (cond
              (#t #f)
              (4 (if #t #\楕 #t))
              ((char->integer #\慏) #t)
              (#t #t)
              (-1 (if #f 3 1))
              (6 (add1 #\踔))
              (else #\῝))
           #\᰾
           (if -2 (if #t #t 3) (if #\U000D29BB #t #f)))))
       (#\U0006685D #\撴)
       (else #\禇)))
     ((cond (-3 #\䗌) (#\楶 0) (-4 #t) (4 #t) (#t #\U00103A78) (2 #t) (else 4))
      #f)
     (#\U0006E074
      (if #f
        (cond
         ((char->integer #\䝀) #t)
         (#t
          (cond
           ((zero? -3) #f)
           (#\ꀹ
            (cond
             ((zero? 2) 19)
             (2 #\褭)
             (#f #t)
             (#\䕪 #\U000E2F95)
             (#\䘰 4)
             ((cond
               (#\疪 -8)
               (#f #\U0010AEA2)
               (#\U00040934 #\U000E8B52)
               (3 #t)
               (-4 #f)
               (#\U0006D517 #f)
               (3 #t)
               (#\㛣 #f)
               (-2 #t)
               (#f -2)
               (#\䅸 #\𪅈)
               (-1 2)
               (#t #f)
               (else #\謥))
              #f)
             ((if #t 2 #\U000DA016) (cond (else #f)))
             (#f -1)
             (else (if #t #t -33))))
           ((if #t (add1 #f) #f) 4)
           (2 (char->integer 1))
           ((cond
             (#\䩐 (cond (-1 #\U00056411) (#t 0) (#t #\撘) (#t 5) (else #t)))
             (1 (cond (#\斲 #f) (#f #\U00071D93) (#f #t) (#t #t) (else -5)))
             (else #\켔))
            #t)
           (else #\U000CA1C1)))
         (#\먒 #\녀)
         (#t -2)
         (#t #f)
         (#t
          (cond
           ((cond
             (else
              (cond
               (#t #t)
               (#\U000AFDE9 #f)
               (#\U0009FF48 #f)
               (#\uABB2 #\U000D3600)
               (else #t))))
            #t)
           (#f #\U000C55DF)
           (2 #t)
           (#t (boolean? (if #t #\챾 #t)))
           (#t #t)
           (#f #f)
           (else #f)))
         (4 2)
         ((integer->char #f) #f)
         (2 (sub1 (char->integer #t)))
         (#\U000F903F (if -1 1 (- (abs -5))))
         ((cond (else (char? -4))) (zero? (abs #f)))
         ((boolean? #f) (char->integer #f))
         ((if (cond (#t #\U00012D7A) (else (if #t -3 #\U00087112)))
            (char? (if #f #\䬪 #t))
            #t)
          #f)
         (else
          (if #t
            (cond ((cond (else 3)) (char->integer #t)) (#f #\𣡖) (else 3))
            #\鍺)))
        #\U00033646))
     (2 (abs #\ꉜ))
     (#\蚪 #t)
     ((if (cond
           (#f #\䰯)
           ((if (if #t #f -1) #f (if #\궅 #f -1)) #f)
           (#\쎟 (if #f 1 (char? #\ම)))
           (#t #t)
           (#t #\U00015152)
           (#f (if (if -4 #\襵 #t) #f #f))
           ((if (sub1 9) #f #f) #f)
           ((integer->char #f) #f)
           ((if #f #\U0006568D 2) #f)
           ((char->integer (cond (else #f))) (cond (else #f)))
           (else #f))
        (- #f)
        -1)
      #f)
     ((integer->char #t) #t)
     (#\U0002E017 (let ((z2 #t)) z2))
     (#t 10)
     (else #f)))
   ((let ((e0 #\U0005AFCF)) #\誻)
    (let ((q2 (cond (#t #f) (else #f)))) (if #\䭅 q2 #t)))
   ((- (let ((c1 #\U000E331E)) #\u0BD3)) (integer? (if #f 8 #f)))
   ((integer? #\U00080DE7) 4)
   (#t (char? #\ꍗ))
   (else
    (if 3
      #f
      (cond
       (#\ԉ #\𣌠)
       (#f
        (cond
         ((cond
           (#f #\U00071EAD)
           (#\U000F4809 (if #t #f -2))
           ((cond
             (#t #\U0006F703)
             (#f #f)
             (#\U0010A593 -1)
             (#\U000CF0C1 -2)
             (#\U0007DC81 #t)
             (-2 #f)
             (else #\浴))
            (if #f #t #t))
           (2 -3)
           (#\U00035119 #t)
           (else (if #t #t #f)))
          (sub1 1))
         (else #\㢳)))
       ((if (abs (cond (-2 #\撂) (else -10)))
          #\ࡄ
          (if (integer->char #f)
            (integer->char #f)
            (cond (#t #t) (#t #\U00061F92) (#f #\瓌) (#t #f) (else #t))))
        (cond
         ((cond ((sub1 #t) (if -7 2 #t)) (else 0)) #f)
         (#f (if (if #f #f #f) 64 (if -128 #t -4)))
         (else #t)))
       (else -64)))))
  (add1 8))
 (#t
  (let ((j2
         (cond
          (#t #t)
          (#f
           (cond
            (#t 0)
            (#t #f)
            (-3 #\U000A38C3)
            (-2 #f)
            ((zero? -1) #t)
            (#t (if 35 #t #f))
            (#\⧓ #t)
            (#t #t)
            (#f #f)
            (#f #f)
            (#\U000590EA #t)
            (1 #\廢)
            (#\U000FC261 (add1 #t))
            (#t 1)
            (-16 #\U0004203C)
            (#t #f)
            (else #t)))
          (else #t))))
    (cond
     ((cond (#\U0009F159 #\➛) (j2 -4) (#f #\┄) (else #\U000FFA01))
      (boolean? #\U000BB027))
     (5 (let ((s1 j2)) j2))
     ((let ((q0 #f)) #\黡) #\U0001934D)
     (#f (if #\U0007F9CB #\U000A43A3 #\U0010F1DD))
     ((if #f #\U000681E9 #f) (boolean? #\禈))
     (8 (if 2 #f j2))
     ((if -1 #\U00073DF7 0) #f)
     ((cond
       (#t 2)
       (-1 #t)
       (j2 j2)
       (j2 j2)
       (#t 32)
       (#\⪰ j2)
       (2 j2)
       (#t 3)
       (1 6)
       (j2 -17)
       (2 1)
       (#t #f)
       (else #f))
      (let ((n1 #\U00106E8D)) #t))
     ((add1 #t)
      (cond
       (#\U000DB52F #\U0004872C)
       (#f 1)
       (#t #f)
       (#\U00094AE4 j2)
       (#t j2)
       (#f #f)
       (-1 #t)
       (2 #t)
       (#f j2)
       (else j2)))
     (#f #t)
     ((char->integer #\㐝) #\ꟸ)
     ((char? #f) (let ((p2 #f)) #t))
     (#t 4)
     ((cond (#t j2) (#f #\U000F2A76) (#\U0009FAAC #\⢦) (else j2)) (sub1 #\拆))
     (-1 4)
     ((- #f) (abs #\U0008B54E))
     ((integer->char #f) #f)
     (j2 #f)
     (j2 (integer->char j2))
     ((cond (#t #\U000FD8B0) (-2 16) (else #f)) (integer? #\昼))
     (-65 #f)
     ((integer->char j2) #t)
     (j2 #f)
     (else 2))))
 (#f #f)
 ((cond (else (if (if -1 #t #\ӭ) #t 1))) #f)
 (#f 2)
 ((if (let ((x2 #t)) (if x2 #t #f)) (char? (abs #t)) (boolean? #t))
  (let ((q0 #\励))
    (let ((g1 (if #f #f q0)))
      (cond (g1 #\U000D8C5F) (#f q0) (#f #t) (#t #t) (#t #t) (else g1)))))
 ((let ((i0 #f)) #t) (- #f))
 (#\U0002FFB9
  (cond
   ((if (let ((w2 #\U000579AA)) 2)
      -3
      (if #f (cond (#f #t) ((if #f #t #f) #\U000A4088) (else #\礩)) #f))
    #\U000F8771)
   ((integer->char (- #\U0007E978))
    (cond ((add1 #t) (cond (else #\U0006B343))) (else (integer->char #t))))
   (#t (add1 3))
   (-4
    (cond
     ((cond
       ((cond
         ((cond (#t #t) (#\U000EB633 #\㌬) (else #\U000303C5)) -8)
         ((if (cond
               (else
                (cond
                 (#f #\U000F7844)
                 (#\凓 #\䛀)
                 (#t -4)
                 (#f #f)
                 (#t #\U00036004)
                 (#f #f)
                 (5 #t)
                 (#t #f)
                 (-2 #\蕨)
                 (#\亢 #\눏)
                 (#f -7)
                 (#\U0006D5C3 #\𤈸)
                 (10 #f)
                 (#f #\U000E2096)
                 (#t #f)
                 (4 #f)
                 (16 #f)
                 (0 3)
                 (#f #f)
                 (2 #t)
                 (else #\駶))))
            1
            #f)
          #t)
         (else (cond (else 2))))
        (cond ((char->integer -1) #f) (else #\֫)))
       (8 #\U000EE3C0)
       (#\U0003BE13 #t)
       (#t #f)
       (#t #\U000A5C08)
       (else #\⾷))
      (cond (else #f)))
     (#t #f)
     (2 (if #\U000971CF -4 #f))
     ((cond (#f #\U000BFAB3) (8 #f) (else -4)) (let ((s0 #\錒)) #\U000C32E8))
     (16 16)
     (#f -2)
     (-6 (zero? #\U000CD625))
     (3 (- #f))
     (#f #t)
     (4 #t)
     (else #t)))
   (else #\⚾)))
 (#t
  (if (let ((s2 #\䂃)) s2)
    (if (if #t #f #\U000689AD) #\眸 (if 3 #\훜 #f))
    (cond
     (#\U000849CB (if -4 (abs (char->integer (char->integer 2))) #\餧))
     ((if #f 3 #f) (cond (else #\𪚲)))
     ((integer->char 1) #t)
     (#t (if #\ぞ #\U000F9097 #\U0007F0B5))
     ((let ((n0 #f)) #t) (boolean? #\餴))
     (#f #\U00048B92)
     ((if #\麜 #t #\U0004EBDF) (- 0))
     (-17 (let ((x1 #\྆)) 1))
     ((zero? #f) (if #\U000C1359 #\U000446A3 #f))
     ((let ((g2 (if -1 -2 #t))) #\㶽) #\U00078796)
     (#\U00067699 #t)
     ((integer? #t) #t)
     ((if #f (boolean? #t) #t) (let ((b0 #t)) b0))
     ((cond (-9 #f) (#f #f) (#f #\걉) (#f -1) (else #f)) #t)
     (#\컘 4)
     (#f #t)
     ((abs -5) (if #t #\𠋤 #\搚))
     (#t -3)
     (else (zero? -3)))))
 (#t
  (cond
   ((let ((f0 -5)) 2) (zero? (char? #t)))
   ((add1
     (if (if (char? #\U000E13F9) (if #f 8 #t) #\셭)
       #\黹
       (if (add1 -2) (if #t #t #t) (boolean? #t))))
    #\컸)
   ((cond (else (- #f))) (integer? #t))
   ((if #\停 (if #\U00037C85 #t #t) #f)
    (cond
     (1 -3)
     (#t #f)
     (#t (if #t #\U000AA95C -2))
     ((let ((q1 #\㠏)) #t) #t)
     (else #t)))
   (#f #\햩)
   ((integer? (- #f)) #t)
   ((integer?
     (cond
      (#f 2)
      (#t #f)
      (#\U000569B9 4)
      (#\U0007C440 #f)
      (-1 #t)
      (#f #t)
      (#\U000455DC -1)
      (#f #t)
      (-5 #\觭)
      (#f (cond (#f #f) (#f 1) (else -3)))
      (#\솝 2)
      (else 1)))
    #\U000ED634)
   (#f #\U000DA811)
   (#f
    (cond
     ((add1 #f) #t)
     (7 (add1 #f))
     (#f
      (cond
       (#\忰 #\U0004C125)
       (-512 #t)
       (#t
        (integer?
         (cond
          ((if #f #f (zero? 5)) #f)
          ((if #f #f -1) #\U0006A586)
          (3 (if (if #\ힿ #t 2) #f 1))
          (-4
           (if #t
             (cond
              (4 #\᳐)
              (#\蹛 #\U000AA4B1)
              (#\𢗼 #t)
              (0 #f)
              (#f -1)
              (#\࣪ #t)
              (#f #\材)
              (#t 1)
              (#t #f)
              (#f 1)
              (else #t))
             #f))
          ((abs (if #f #\U000D4C1B #\臚)) (sub1 #t))
          (#\𧟃 2)
          (else (char? #f)))))
       (7 #f)
       (2 #t)
       (#\U000602DB #t)
       (#f 0)
       (#t 4)
       (else (if #\U000DBD55 (- (char? (add1 -2))) (integer->char #t)))))
     ((if #\䡶 #f #f) 17)
     (#t
      (if (cond
           (-2 #t)
           (3 #f)
           ((if #\U00047491 1 (add1 (cond (else #f)))) #t)
           ((char?
             (char->integer (cond (#f #f) (1 #\ۯ) (#\uA7C1 3) (else #t))))
            #t)
           (#t #t)
           ((if #t #t #f)
            (if #f 1 (cond (#f (cond (else #t))) (else #\U0001DE53))))
           (else #\ਕ))
        #\U0006A09D
        #f))
     (#t 4)
     ((let ((j1 -2)) -2) #\U0009E9AA)
     ((cond
       (-2 #f)
       (#t #t)
       (#t #f)
       (#t (integer->char #\U00035232))
       (else #\뷶))
      (cond
       (#f #t)
       (#f #f)
       (else
        (cond
         ((if #f
            (if #\U00037133 #f (integer? -5))
            (cond
             (#t #\U0008C212)
             (#f #t)
             ((if -2 #t #\U000B33AE) (if #f #f #t))
             (else #\U000D530D)))
          #\셸)
         ((sub1 (if -3 #\U00080E66 (if #f #\뱳 -2))) -3)
         ((if (if (cond
                   (2 #f)
                   (#\⾁ #f)
                   (#t #t)
                   (#t 3)
                   (#t #t)
                   (#\U000D725C #t)
                   (#f #f)
                   (1 -5)
                   (1 #\튄)
                   (#\䍷 #f)
                   (6 #f)
                   (#t #t)
                   (#\ブ #t)
                   (#f #f)
                   (else #\U000845CF))
                #t
                #f)
            #f
            #t)
          -4)
         (-1 (if #f #\峌 #f))
         (else #\쌂)))))
     (#t #\긙)
     (else #\U000CA5EF)))
   ((if (boolean? #f)
      (zero? #f)
      (cond
       (-3 (zero? #\ꦷ))
       ((cond
         (#\ḵ (zero? #\࣯))
         (#f #f)
         ((sub1 (if #f #\馋 9)) -1)
         (#f (integer? (if #t #t #\U000FC0C6)))
         ((cond
           (#f (sub1 #f))
           (#\娸 (cond (#\U0010D1B8 #t) (else -8)))
           ((if 3 2 #f) #f)
           ((if #\ᶕ #t #t) (if #t #t #t))
           (else #\鐬))
          #\㴧)
         (#t #\U0009FE94)
         ((if (cond (#\펚 #t) (#f -10) (else #\몭)) #f (abs #f)) (integer? -1))
         (#\虒 #f)
         (#f #t)
         (else (cond (-1 #\U000516CD) (else (if #t #f #t)))))
        -8)
       (#\ڽ #\U00065A86)
       (#f #\uEFD1)
       (else #t)))
    #\𧵾)
   (1 #f)
   (else
    (cond
     (else
      (abs
       (cond
        (-2 #t)
        ((if #t 16 (- #\U000946EC)) (if (zero? #t) #t #\U0009AEF1))
        (-1 1)
        ((if #t
           #\U000878B2
           (cond
            (#f #f)
            (1 #f)
            (#\U00076258 -4)
            (-3 -2)
            (#\㕕 #f)
            (#\U00093692 18)
            (9 5)
            (#f 1)
            (#t -2)
            (#\뷿 #f)
            (#t #\U000AE178)
            (-1 #\U000F6132)
            (#\䰌 #f)
            (#t #\軺)
            (else #f)))
         (char->integer #\戜))
        (#t (abs #t))
        (#t (integer->char (boolean? #\瑂)))
        ((cond
          (-11 #f)
          ((char->integer #\U000D291B) (char? #t))
          (else (if #t -5 2)))
         #t)
        (else (if #\쳋 (zero? #\ᷣ) (if #f #\埅 #t))))))))))
 (else
  (if -7
    (cond
     (#f (if #f (integer->char #f) (char->integer #f)))
     ((add1 -4) #\첣)
     (#f
      (cond
       (-3 1)
       (2 (if #\뛳 1 #\姣))
       (#\썘 #\ၪ)
       ((integer->char 1) (abs #f))
       ((integer->char #t) #\琧)
       (#t 2)
       (#t #\뫰)
       ((char? -5) #\uAB1D)
       (else (integer->char 2))))
     ((if (cond
           (#t 7)
           (#\퀧 #f)
           (#t #\钆)
           (-1 #t)
           (#t #t)
           (#\U0009EA81 #f)
           (#\U000DF22D #\U00060FB6)
           (#t #t)
           (-5 #\묛)
           (#t #f)
           (17 #f)
           (else 0))
        #f
        #\鵸)
      (if #\퀏 #t (cond (5 #\⇈) (else #\䀔))))
     (#f #f)
     (#f -9)
     (10 (cond (else #t)))
     (#t
      (if (cond
           (-6 #f)
           (#f -2)
           (5 #\坨)
           (#f #t)
           (#f #f)
           (#t #f)
           (#\ृ #\㺹)
           (#t 4)
           (#t #\䐾)
           (else #t))
        #\ᣟ
        (char? #f)))
     (else -5))
    #t)))
